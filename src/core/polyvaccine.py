# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_polyvaccine', [dirname(__file__)])
        except ImportError:
            import _polyvaccine
            return _polyvaccine
        if fp is not None:
            try:
                _mod = imp.load_module('_polyvaccine', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _polyvaccine = swig_import_helper()
    del swig_import_helper
else:
    import _polyvaccine
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


HTTP_NODE_TYPE_STATIC = _polyvaccine.HTTP_NODE_TYPE_STATIC
HTTP_NODE_TYPE_DYNAMIC = _polyvaccine.HTTP_NODE_TYPE_DYNAMIC
HTTP_CACHE_HEADER = _polyvaccine.HTTP_CACHE_HEADER
HTTP_CACHE_PARAMETER = _polyvaccine.HTTP_CACHE_PARAMETER
class ST_HttpNode(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ST_HttpNode, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ST_HttpNode, name)
    __repr__ = _swig_repr
    __swig_setmethods__["matchs"] = _polyvaccine.ST_HttpNode_matchs_set
    __swig_getmethods__["matchs"] = _polyvaccine.ST_HttpNode_matchs_get
    if _newclass:matchs = _swig_property(_polyvaccine.ST_HttpNode_matchs_get, _polyvaccine.ST_HttpNode_matchs_set)
    __swig_setmethods__["type"] = _polyvaccine.ST_HttpNode_type_set
    __swig_getmethods__["type"] = _polyvaccine.ST_HttpNode_type_get
    if _newclass:type = _swig_property(_polyvaccine.ST_HttpNode_type_get, _polyvaccine.ST_HttpNode_type_set)
    def __init__(self): 
        this = _polyvaccine.new_ST_HttpNode()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _polyvaccine.delete_ST_HttpNode
    __del__ = lambda self : None;
ST_HttpNode_swigregister = _polyvaccine.ST_HttpNode_swigregister
ST_HttpNode_swigregister(ST_HttpNode)

class ST_HttpCache(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ST_HttpCache, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ST_HttpCache, name)
    __repr__ = _swig_repr
    __swig_setmethods__["http_header_cache"] = _polyvaccine.ST_HttpCache_http_header_cache_set
    __swig_getmethods__["http_header_cache"] = _polyvaccine.ST_HttpCache_http_header_cache_get
    if _newclass:http_header_cache = _swig_property(_polyvaccine.ST_HttpCache_http_header_cache_get, _polyvaccine.ST_HttpCache_http_header_cache_set)
    __swig_setmethods__["http_parameter_cache"] = _polyvaccine.ST_HttpCache_http_parameter_cache_set
    __swig_getmethods__["http_parameter_cache"] = _polyvaccine.ST_HttpCache_http_parameter_cache_get
    if _newclass:http_parameter_cache = _swig_property(_polyvaccine.ST_HttpCache_http_parameter_cache_get, _polyvaccine.ST_HttpCache_http_parameter_cache_set)
    __swig_setmethods__["header_hits"] = _polyvaccine.ST_HttpCache_header_hits_set
    __swig_getmethods__["header_hits"] = _polyvaccine.ST_HttpCache_header_hits_get
    if _newclass:header_hits = _swig_property(_polyvaccine.ST_HttpCache_header_hits_get, _polyvaccine.ST_HttpCache_header_hits_set)
    __swig_setmethods__["header_fails"] = _polyvaccine.ST_HttpCache_header_fails_set
    __swig_getmethods__["header_fails"] = _polyvaccine.ST_HttpCache_header_fails_get
    if _newclass:header_fails = _swig_property(_polyvaccine.ST_HttpCache_header_fails_get, _polyvaccine.ST_HttpCache_header_fails_set)
    __swig_setmethods__["parameter_hits"] = _polyvaccine.ST_HttpCache_parameter_hits_set
    __swig_getmethods__["parameter_hits"] = _polyvaccine.ST_HttpCache_parameter_hits_get
    if _newclass:parameter_hits = _swig_property(_polyvaccine.ST_HttpCache_parameter_hits_get, _polyvaccine.ST_HttpCache_parameter_hits_set)
    __swig_setmethods__["parameter_fails"] = _polyvaccine.ST_HttpCache_parameter_fails_set
    __swig_getmethods__["parameter_fails"] = _polyvaccine.ST_HttpCache_parameter_fails_get
    if _newclass:parameter_fails = _swig_property(_polyvaccine.ST_HttpCache_parameter_fails_get, _polyvaccine.ST_HttpCache_parameter_fails_set)
    __swig_setmethods__["header_suspicious_opcodes"] = _polyvaccine.ST_HttpCache_header_suspicious_opcodes_set
    __swig_getmethods__["header_suspicious_opcodes"] = _polyvaccine.ST_HttpCache_header_suspicious_opcodes_get
    if _newclass:header_suspicious_opcodes = _swig_property(_polyvaccine.ST_HttpCache_header_suspicious_opcodes_get, _polyvaccine.ST_HttpCache_header_suspicious_opcodes_set)
    __swig_setmethods__["parameter_suspicious_opcodes"] = _polyvaccine.ST_HttpCache_parameter_suspicious_opcodes_set
    __swig_getmethods__["parameter_suspicious_opcodes"] = _polyvaccine.ST_HttpCache_parameter_suspicious_opcodes_get
    if _newclass:parameter_suspicious_opcodes = _swig_property(_polyvaccine.ST_HttpCache_parameter_suspicious_opcodes_get, _polyvaccine.ST_HttpCache_parameter_suspicious_opcodes_set)
    def __init__(self): 
        this = _polyvaccine.new_ST_HttpCache()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _polyvaccine.delete_ST_HttpCache
    __del__ = lambda self : None;
ST_HttpCache_swigregister = _polyvaccine.ST_HttpCache_swigregister
ST_HttpCache_swigregister(ST_HttpCache)


def HTCC_Init():
  return _polyvaccine.HTCC_Init()
HTCC_Init = _polyvaccine.HTCC_Init

def HTCC_Destroy(*args):
  return _polyvaccine.HTCC_Destroy(*args)
HTCC_Destroy = _polyvaccine.HTCC_Destroy

def HTCC_AddHeaderToCache(*args):
  return _polyvaccine.HTCC_AddHeaderToCache(*args)
HTCC_AddHeaderToCache = _polyvaccine.HTCC_AddHeaderToCache

def HTCC_AddParameterToCache(*args):
  return _polyvaccine.HTCC_AddParameterToCache(*args)
HTCC_AddParameterToCache = _polyvaccine.HTCC_AddParameterToCache

def HTCC_GetHeaderFromCache(*args):
  return _polyvaccine.HTCC_GetHeaderFromCache(*args)
HTCC_GetHeaderFromCache = _polyvaccine.HTCC_GetHeaderFromCache

def HTCC_GetParameterFromCache(*args):
  return _polyvaccine.HTCC_GetParameterFromCache(*args)
HTCC_GetParameterFromCache = _polyvaccine.HTCC_GetParameterFromCache

def HTCC_Stats(*args):
  return _polyvaccine.HTCC_Stats(*args)
HTCC_Stats = _polyvaccine.HTCC_Stats

def HTCC_GetNumberHttpHeaders(*args):
  return _polyvaccine.HTCC_GetNumberHttpHeaders(*args)
HTCC_GetNumberHttpHeaders = _polyvaccine.HTCC_GetNumberHttpHeaders

def HTCC_GetNumberHttpParameters(*args):
  return _polyvaccine.HTCC_GetNumberHttpParameters(*args)
HTCC_GetNumberHttpParameters = _polyvaccine.HTCC_GetNumberHttpParameters
MAX_FLOWS_PER_POOL = _polyvaccine.MAX_FLOWS_PER_POOL
class ST_FlowPool(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ST_FlowPool, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ST_FlowPool, name)
    __repr__ = _swig_repr
    __swig_setmethods__["flows"] = _polyvaccine.ST_FlowPool_flows_set
    __swig_getmethods__["flows"] = _polyvaccine.ST_FlowPool_flows_get
    if _newclass:flows = _swig_property(_polyvaccine.ST_FlowPool_flows_get, _polyvaccine.ST_FlowPool_flows_set)
    __swig_setmethods__["total_releases"] = _polyvaccine.ST_FlowPool_total_releases_set
    __swig_getmethods__["total_releases"] = _polyvaccine.ST_FlowPool_total_releases_get
    if _newclass:total_releases = _swig_property(_polyvaccine.ST_FlowPool_total_releases_get, _polyvaccine.ST_FlowPool_total_releases_set)
    __swig_setmethods__["total_acquires"] = _polyvaccine.ST_FlowPool_total_acquires_set
    __swig_getmethods__["total_acquires"] = _polyvaccine.ST_FlowPool_total_acquires_get
    if _newclass:total_acquires = _swig_property(_polyvaccine.ST_FlowPool_total_acquires_get, _polyvaccine.ST_FlowPool_total_acquires_set)
    __swig_setmethods__["total_errors"] = _polyvaccine.ST_FlowPool_total_errors_set
    __swig_getmethods__["total_errors"] = _polyvaccine.ST_FlowPool_total_errors_get
    if _newclass:total_errors = _swig_property(_polyvaccine.ST_FlowPool_total_errors_get, _polyvaccine.ST_FlowPool_total_errors_set)
    def __init__(self): 
        this = _polyvaccine.new_ST_FlowPool()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _polyvaccine.delete_ST_FlowPool
    __del__ = lambda self : None;
ST_FlowPool_swigregister = _polyvaccine.ST_FlowPool_swigregister
ST_FlowPool_swigregister(ST_FlowPool)


def FLPO_Init():
  return _polyvaccine.FLPO_Init()
FLPO_Init = _polyvaccine.FLPO_Init

def FLPO_Destroy(*args):
  return _polyvaccine.FLPO_Destroy(*args)
FLPO_Destroy = _polyvaccine.FLPO_Destroy

def FLPO_AddFlow(*args):
  return _polyvaccine.FLPO_AddFlow(*args)
FLPO_AddFlow = _polyvaccine.FLPO_AddFlow

def FLPO_GetFlow(*args):
  return _polyvaccine.FLPO_GetFlow(*args)
FLPO_GetFlow = _polyvaccine.FLPO_GetFlow

def FLPO_GetNumberFlows(*args):
  return _polyvaccine.FLPO_GetNumberFlows(*args)
FLPO_GetNumberFlows = _polyvaccine.FLPO_GetNumberFlows

def FLPO_IncrementFlowPool(*args):
  return _polyvaccine.FLPO_IncrementFlowPool(*args)
FLPO_IncrementFlowPool = _polyvaccine.FLPO_IncrementFlowPool

def FLPO_DecrementFlowPool(*args):
  return _polyvaccine.FLPO_DecrementFlowPool(*args)
FLPO_DecrementFlowPool = _polyvaccine.FLPO_DecrementFlowPool

def FLPO_Stats(*args):
  return _polyvaccine.FLPO_Stats(*args)
FLPO_Stats = _polyvaccine.FLPO_Stats
MAX_MEMORY_SEGMENTS_PER_POOL = _polyvaccine.MAX_MEMORY_SEGMENTS_PER_POOL
class ST_MemoryPool(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ST_MemoryPool, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ST_MemoryPool, name)
    __repr__ = _swig_repr
    __swig_setmethods__["mem"] = _polyvaccine.ST_MemoryPool_mem_set
    __swig_getmethods__["mem"] = _polyvaccine.ST_MemoryPool_mem_get
    if _newclass:mem = _swig_property(_polyvaccine.ST_MemoryPool_mem_get, _polyvaccine.ST_MemoryPool_mem_set)
    __swig_setmethods__["total_releases"] = _polyvaccine.ST_MemoryPool_total_releases_set
    __swig_getmethods__["total_releases"] = _polyvaccine.ST_MemoryPool_total_releases_get
    if _newclass:total_releases = _swig_property(_polyvaccine.ST_MemoryPool_total_releases_get, _polyvaccine.ST_MemoryPool_total_releases_set)
    __swig_setmethods__["total_acquires"] = _polyvaccine.ST_MemoryPool_total_acquires_set
    __swig_getmethods__["total_acquires"] = _polyvaccine.ST_MemoryPool_total_acquires_get
    if _newclass:total_acquires = _swig_property(_polyvaccine.ST_MemoryPool_total_acquires_get, _polyvaccine.ST_MemoryPool_total_acquires_set)
    __swig_setmethods__["total_errors"] = _polyvaccine.ST_MemoryPool_total_errors_set
    __swig_getmethods__["total_errors"] = _polyvaccine.ST_MemoryPool_total_errors_get
    if _newclass:total_errors = _swig_property(_polyvaccine.ST_MemoryPool_total_errors_get, _polyvaccine.ST_MemoryPool_total_errors_set)
    __swig_setmethods__["total_release_bytes"] = _polyvaccine.ST_MemoryPool_total_release_bytes_set
    __swig_getmethods__["total_release_bytes"] = _polyvaccine.ST_MemoryPool_total_release_bytes_get
    if _newclass:total_release_bytes = _swig_property(_polyvaccine.ST_MemoryPool_total_release_bytes_get, _polyvaccine.ST_MemoryPool_total_release_bytes_set)
    __swig_setmethods__["total_acquire_bytes"] = _polyvaccine.ST_MemoryPool_total_acquire_bytes_set
    __swig_getmethods__["total_acquire_bytes"] = _polyvaccine.ST_MemoryPool_total_acquire_bytes_get
    if _newclass:total_acquire_bytes = _swig_property(_polyvaccine.ST_MemoryPool_total_acquire_bytes_get, _polyvaccine.ST_MemoryPool_total_acquire_bytes_set)
    def __init__(self): 
        this = _polyvaccine.new_ST_MemoryPool()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _polyvaccine.delete_ST_MemoryPool
    __del__ = lambda self : None;
ST_MemoryPool_swigregister = _polyvaccine.ST_MemoryPool_swigregister
ST_MemoryPool_swigregister(ST_MemoryPool)


def MEPO_Init():
  return _polyvaccine.MEPO_Init()
MEPO_Init = _polyvaccine.MEPO_Init

def MEPO_Destroy(*args):
  return _polyvaccine.MEPO_Destroy(*args)
MEPO_Destroy = _polyvaccine.MEPO_Destroy

def MEPO_AddMemorySegment(*args):
  return _polyvaccine.MEPO_AddMemorySegment(*args)
MEPO_AddMemorySegment = _polyvaccine.MEPO_AddMemorySegment

def MEPO_GetMemorySegment(*args):
  return _polyvaccine.MEPO_GetMemorySegment(*args)
MEPO_GetMemorySegment = _polyvaccine.MEPO_GetMemorySegment

def MEPO_GetNumberMemorySegments(*args):
  return _polyvaccine.MEPO_GetNumberMemorySegments(*args)
MEPO_GetNumberMemorySegments = _polyvaccine.MEPO_GetNumberMemorySegments

def MEPO_IncrementMemoryPool(*args):
  return _polyvaccine.MEPO_IncrementMemoryPool(*args)
MEPO_IncrementMemoryPool = _polyvaccine.MEPO_IncrementMemoryPool

def MEPO_DecrementMemoryPool(*args):
  return _polyvaccine.MEPO_DecrementMemoryPool(*args)
MEPO_DecrementMemoryPool = _polyvaccine.MEPO_DecrementMemoryPool

def MEPO_Stats(*args):
  return _polyvaccine.MEPO_Stats(*args)
MEPO_Stats = _polyvaccine.MEPO_Stats
MAX_SEGMENT_SIZE = _polyvaccine.MAX_SEGMENT_SIZE
class ST_MemorySegment(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ST_MemorySegment, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ST_MemorySegment, name)
    __repr__ = _swig_repr
    __swig_setmethods__["mem"] = _polyvaccine.ST_MemorySegment_mem_set
    __swig_getmethods__["mem"] = _polyvaccine.ST_MemorySegment_mem_get
    if _newclass:mem = _swig_property(_polyvaccine.ST_MemorySegment_mem_get, _polyvaccine.ST_MemorySegment_mem_set)
    __swig_setmethods__["virtual_size"] = _polyvaccine.ST_MemorySegment_virtual_size_set
    __swig_getmethods__["virtual_size"] = _polyvaccine.ST_MemorySegment_virtual_size_get
    if _newclass:virtual_size = _swig_property(_polyvaccine.ST_MemorySegment_virtual_size_get, _polyvaccine.ST_MemorySegment_virtual_size_set)
    __swig_setmethods__["real_size"] = _polyvaccine.ST_MemorySegment_real_size_set
    __swig_getmethods__["real_size"] = _polyvaccine.ST_MemorySegment_real_size_get
    if _newclass:real_size = _swig_property(_polyvaccine.ST_MemorySegment_real_size_get, _polyvaccine.ST_MemorySegment_real_size_set)
    def __init__(self): 
        this = _polyvaccine.new_ST_MemorySegment()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _polyvaccine.delete_ST_MemorySegment
    __del__ = lambda self : None;
ST_MemorySegment_swigregister = _polyvaccine.ST_MemorySegment_swigregister
ST_MemorySegment_swigregister(ST_MemorySegment)


def MESG_Init():
  return _polyvaccine.MESG_Init()
MESG_Init = _polyvaccine.MESG_Init

def MESG_InitWithSize(*args):
  return _polyvaccine.MESG_InitWithSize(*args)
MESG_InitWithSize = _polyvaccine.MESG_InitWithSize

def MESG_Destroy(*args):
  return _polyvaccine.MESG_Destroy(*args)
MESG_Destroy = _polyvaccine.MESG_Destroy

def MESG_Reset(*args):
  return _polyvaccine.MESG_Reset(*args)
MESG_Reset = _polyvaccine.MESG_Reset

def MESG_UpdateSize(*args):
  return _polyvaccine.MESG_UpdateSize(*args)
MESG_UpdateSize = _polyvaccine.MESG_UpdateSize

def MESG_AppendPayload(*args):
  return _polyvaccine.MESG_AppendPayload(*args)
MESG_AppendPayload = _polyvaccine.MESG_AppendPayload

def MESG_AppendPayloadNew(*args):
  return _polyvaccine.MESG_AppendPayloadNew(*args)
MESG_AppendPayloadNew = _polyvaccine.MESG_AppendPayloadNew
ETH_P_8021Q = _polyvaccine.ETH_P_8021Q
ETH_P_IP = _polyvaccine.ETH_P_IP
class ST_PacketContext(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ST_PacketContext, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ST_PacketContext, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ip"] = _polyvaccine.ST_PacketContext_ip_set
    __swig_getmethods__["ip"] = _polyvaccine.ST_PacketContext_ip_get
    if _newclass:ip = _swig_property(_polyvaccine.ST_PacketContext_ip_get, _polyvaccine.ST_PacketContext_ip_set)
    __swig_setmethods__["tcp"] = _polyvaccine.ST_PacketContext_tcp_set
    __swig_getmethods__["tcp"] = _polyvaccine.ST_PacketContext_tcp_get
    if _newclass:tcp = _swig_property(_polyvaccine.ST_PacketContext_tcp_get, _polyvaccine.ST_PacketContext_tcp_set)
    __swig_setmethods__["payload"] = _polyvaccine.ST_PacketContext_payload_set
    __swig_getmethods__["payload"] = _polyvaccine.ST_PacketContext_payload_get
    if _newclass:payload = _swig_property(_polyvaccine.ST_PacketContext_payload_get, _polyvaccine.ST_PacketContext_payload_set)
    __swig_setmethods__["len"] = _polyvaccine.ST_PacketContext_len_set
    __swig_getmethods__["len"] = _polyvaccine.ST_PacketContext_len_get
    if _newclass:len = _swig_property(_polyvaccine.ST_PacketContext_len_get, _polyvaccine.ST_PacketContext_len_set)
    __swig_setmethods__["now"] = _polyvaccine.ST_PacketContext_now_set
    __swig_getmethods__["now"] = _polyvaccine.ST_PacketContext_now_get
    if _newclass:now = _swig_property(_polyvaccine.ST_PacketContext_now_get, _polyvaccine.ST_PacketContext_now_set)
    def __init__(self): 
        this = _polyvaccine.new_ST_PacketContext()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _polyvaccine.delete_ST_PacketContext
    __del__ = lambda self : None;
ST_PacketContext_swigregister = _polyvaccine.ST_PacketContext_swigregister
ST_PacketContext_swigregister(ST_PacketContext)


def PKCX_Init():
  return _polyvaccine.PKCX_Init()
PKCX_Init = _polyvaccine.PKCX_Init

def PKCX_Destroy():
  return _polyvaccine.PKCX_Destroy()
PKCX_Destroy = _polyvaccine.PKCX_Destroy

def PKCX_SetIPHeader(*args):
  return _polyvaccine.PKCX_SetIPHeader(*args)
PKCX_SetIPHeader = _polyvaccine.PKCX_SetIPHeader

def PKCX_SetTCPHeader(*args):
  return _polyvaccine.PKCX_SetTCPHeader(*args)
PKCX_SetTCPHeader = _polyvaccine.PKCX_SetTCPHeader

def PKCX_SetL7Payload(*args):
  return _polyvaccine.PKCX_SetL7Payload(*args)
PKCX_SetL7Payload = _polyvaccine.PKCX_SetL7Payload

def PKCX_SetIPSrcAddr(*args):
  return _polyvaccine.PKCX_SetIPSrcAddr(*args)
PKCX_SetIPSrcAddr = _polyvaccine.PKCX_SetIPSrcAddr

def PKCX_SetIPDstAddr(*args):
  return _polyvaccine.PKCX_SetIPDstAddr(*args)
PKCX_SetIPDstAddr = _polyvaccine.PKCX_SetIPDstAddr

def PKCX_GetIPSrcAddr():
  return _polyvaccine.PKCX_GetIPSrcAddr()
PKCX_GetIPSrcAddr = _polyvaccine.PKCX_GetIPSrcAddr

def PKCX_GetIPDstAddr():
  return _polyvaccine.PKCX_GetIPDstAddr()
PKCX_GetIPDstAddr = _polyvaccine.PKCX_GetIPDstAddr

def PKCX_GetTTL():
  return _polyvaccine.PKCX_GetTTL()
PKCX_GetTTL = _polyvaccine.PKCX_GetTTL

def PKCX_GetIPPacketLength():
  return _polyvaccine.PKCX_GetIPPacketLength()
PKCX_GetIPPacketLength = _polyvaccine.PKCX_GetIPPacketLength

def PKCX_GetIPHeaderLength():
  return _polyvaccine.PKCX_GetIPHeaderLength()
PKCX_GetIPHeaderLength = _polyvaccine.PKCX_GetIPHeaderLength

def PKCX_IsIPver4():
  return _polyvaccine.PKCX_IsIPver4()
PKCX_IsIPver4 = _polyvaccine.PKCX_IsIPver4

def PKCX_GetIPProtocol():
  return _polyvaccine.PKCX_GetIPProtocol()
PKCX_GetIPProtocol = _polyvaccine.PKCX_GetIPProtocol

def PKCX_GetTCPPayloadLength():
  return _polyvaccine.PKCX_GetTCPPayloadLength()
PKCX_GetTCPPayloadLength = _polyvaccine.PKCX_GetTCPPayloadLength

def PKCX_GetPayloadLength():
  return _polyvaccine.PKCX_GetPayloadLength()
PKCX_GetPayloadLength = _polyvaccine.PKCX_GetPayloadLength

def PKCX_GetTCPHeaderLength():
  return _polyvaccine.PKCX_GetTCPHeaderLength()
PKCX_GetTCPHeaderLength = _polyvaccine.PKCX_GetTCPHeaderLength

def PKCX_GetTCPSrcPort():
  return _polyvaccine.PKCX_GetTCPSrcPort()
PKCX_GetTCPSrcPort = _polyvaccine.PKCX_GetTCPSrcPort

def PKCX_GetTCPDstPort():
  return _polyvaccine.PKCX_GetTCPDstPort()
PKCX_GetTCPDstPort = _polyvaccine.PKCX_GetTCPDstPort

def PKCX_IsTCPPush():
  return _polyvaccine.PKCX_IsTCPPush()
PKCX_IsTCPPush = _polyvaccine.PKCX_IsTCPPush

def PKCX_GetPayload():
  return _polyvaccine.PKCX_GetPayload()
PKCX_GetPayload = _polyvaccine.PKCX_GetPayload

def PKCX_GetSrcAddrDotNotation():
  return _polyvaccine.PKCX_GetSrcAddrDotNotation()
PKCX_GetSrcAddrDotNotation = _polyvaccine.PKCX_GetSrcAddrDotNotation

def PKCX_GetDstAddrDotNotation():
  return _polyvaccine.PKCX_GetDstAddrDotNotation()
PKCX_GetDstAddrDotNotation = _polyvaccine.PKCX_GetDstAddrDotNotation

def PKCX_GetTCPSequenceNumber():
  return _polyvaccine.PKCX_GetTCPSequenceNumber()
PKCX_GetTCPSequenceNumber = _polyvaccine.PKCX_GetTCPSequenceNumber
class ST_HttpFlow(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ST_HttpFlow, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ST_HttpFlow, name)
    __repr__ = _swig_repr
    __swig_setmethods__["saddr"] = _polyvaccine.ST_HttpFlow_saddr_set
    __swig_getmethods__["saddr"] = _polyvaccine.ST_HttpFlow_saddr_get
    if _newclass:saddr = _swig_property(_polyvaccine.ST_HttpFlow_saddr_get, _polyvaccine.ST_HttpFlow_saddr_set)
    __swig_setmethods__["daddr"] = _polyvaccine.ST_HttpFlow_daddr_set
    __swig_getmethods__["daddr"] = _polyvaccine.ST_HttpFlow_daddr_get
    if _newclass:daddr = _swig_property(_polyvaccine.ST_HttpFlow_daddr_get, _polyvaccine.ST_HttpFlow_daddr_set)
    __swig_setmethods__["sport"] = _polyvaccine.ST_HttpFlow_sport_set
    __swig_getmethods__["sport"] = _polyvaccine.ST_HttpFlow_sport_get
    if _newclass:sport = _swig_property(_polyvaccine.ST_HttpFlow_sport_get, _polyvaccine.ST_HttpFlow_sport_set)
    __swig_setmethods__["dport"] = _polyvaccine.ST_HttpFlow_dport_set
    __swig_getmethods__["dport"] = _polyvaccine.ST_HttpFlow_dport_get
    if _newclass:dport = _swig_property(_polyvaccine.ST_HttpFlow_dport_get, _polyvaccine.ST_HttpFlow_dport_set)
    __swig_setmethods__["total_bytes"] = _polyvaccine.ST_HttpFlow_total_bytes_set
    __swig_getmethods__["total_bytes"] = _polyvaccine.ST_HttpFlow_total_bytes_get
    if _newclass:total_bytes = _swig_property(_polyvaccine.ST_HttpFlow_total_bytes_get, _polyvaccine.ST_HttpFlow_total_bytes_set)
    __swig_setmethods__["total_packets"] = _polyvaccine.ST_HttpFlow_total_packets_set
    __swig_getmethods__["total_packets"] = _polyvaccine.ST_HttpFlow_total_packets_get
    if _newclass:total_packets = _swig_property(_polyvaccine.ST_HttpFlow_total_packets_get, _polyvaccine.ST_HttpFlow_total_packets_set)
    __swig_setmethods__["arrive_time"] = _polyvaccine.ST_HttpFlow_arrive_time_set
    __swig_getmethods__["arrive_time"] = _polyvaccine.ST_HttpFlow_arrive_time_get
    if _newclass:arrive_time = _swig_property(_polyvaccine.ST_HttpFlow_arrive_time_get, _polyvaccine.ST_HttpFlow_arrive_time_set)
    __swig_setmethods__["current_time"] = _polyvaccine.ST_HttpFlow_current_time_set
    __swig_getmethods__["current_time"] = _polyvaccine.ST_HttpFlow_current_time_get
    if _newclass:current_time = _swig_property(_polyvaccine.ST_HttpFlow_current_time_get, _polyvaccine.ST_HttpFlow_current_time_set)
    __swig_setmethods__["memhttp"] = _polyvaccine.ST_HttpFlow_memhttp_set
    __swig_getmethods__["memhttp"] = _polyvaccine.ST_HttpFlow_memhttp_get
    if _newclass:memhttp = _swig_property(_polyvaccine.ST_HttpFlow_memhttp_get, _polyvaccine.ST_HttpFlow_memhttp_set)
    def __init__(self): 
        this = _polyvaccine.new_ST_HttpFlow()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _polyvaccine.delete_ST_HttpFlow
    __del__ = lambda self : None;
ST_HttpFlow_swigregister = _polyvaccine.ST_HttpFlow_swigregister
ST_HttpFlow_swigregister(ST_HttpFlow)
cvar = _polyvaccine.cvar


def HTLF_SetFlowId(*args):
  return _polyvaccine.HTLF_SetFlowId(*args)
HTLF_SetFlowId = _polyvaccine.HTLF_SetFlowId

def HTFL_Reset(*args):
  return _polyvaccine.HTFL_Reset(*args)
HTFL_Reset = _polyvaccine.HTFL_Reset

def HTFL_SetMemorySegment(*args):
  return _polyvaccine.HTFL_SetMemorySegment(*args)
HTFL_SetMemorySegment = _polyvaccine.HTFL_SetMemorySegment

def HTFL_SetArriveTime(*args):
  return _polyvaccine.HTFL_SetArriveTime(*args)
HTFL_SetArriveTime = _polyvaccine.HTFL_SetArriveTime

def HTFL_UpdateTime(*args):
  return _polyvaccine.HTFL_UpdateTime(*args)
HTFL_UpdateTime = _polyvaccine.HTFL_UpdateTime
POLYENGINE_STATE_STOP = _polyvaccine.POLYENGINE_STATE_STOP
POLYENGINE_STATE_RUNNING = _polyvaccine.POLYENGINE_STATE_RUNNING
POLYVACCINE_AGENT_INTERFACE = _polyvaccine.POLYVACCINE_AGENT_INTERFACE
POLYVACCINE_FILTER_ENGINE_NAME = _polyvaccine.POLYVACCINE_FILTER_ENGINE_NAME
class ST_PolyEngine(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ST_PolyEngine, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ST_PolyEngine, name)
    __repr__ = _swig_repr
    __swig_setmethods__["polyengine_status"] = _polyvaccine.ST_PolyEngine_polyengine_status_set
    __swig_getmethods__["polyengine_status"] = _polyvaccine.ST_PolyEngine_polyengine_status_get
    if _newclass:polyengine_status = _swig_property(_polyvaccine.ST_PolyEngine_polyengine_status_get, _polyvaccine.ST_PolyEngine_polyengine_status_set)
    __swig_setmethods__["pcapfd"] = _polyvaccine.ST_PolyEngine_pcapfd_set
    __swig_getmethods__["pcapfd"] = _polyvaccine.ST_PolyEngine_pcapfd_get
    if _newclass:pcapfd = _swig_property(_polyvaccine.ST_PolyEngine_pcapfd_get, _polyvaccine.ST_PolyEngine_pcapfd_set)
    __swig_setmethods__["is_pcap_file"] = _polyvaccine.ST_PolyEngine_is_pcap_file_set
    __swig_getmethods__["is_pcap_file"] = _polyvaccine.ST_PolyEngine_is_pcap_file_get
    if _newclass:is_pcap_file = _swig_property(_polyvaccine.ST_PolyEngine_is_pcap_file_get, _polyvaccine.ST_PolyEngine_is_pcap_file_set)
    __swig_setmethods__["defaultport"] = _polyvaccine.ST_PolyEngine_defaultport_set
    __swig_getmethods__["defaultport"] = _polyvaccine.ST_PolyEngine_defaultport_get
    if _newclass:defaultport = _swig_property(_polyvaccine.ST_PolyEngine_defaultport_get, _polyvaccine.ST_PolyEngine_defaultport_set)
    __swig_setmethods__["bus"] = _polyvaccine.ST_PolyEngine_bus_set
    __swig_getmethods__["bus"] = _polyvaccine.ST_PolyEngine_bus_get
    if _newclass:bus = _swig_property(_polyvaccine.ST_PolyEngine_bus_get, _polyvaccine.ST_PolyEngine_bus_set)
    __swig_setmethods__["conn"] = _polyvaccine.ST_PolyEngine_conn_set
    __swig_getmethods__["conn"] = _polyvaccine.ST_PolyEngine_conn_get
    if _newclass:conn = _swig_property(_polyvaccine.ST_PolyEngine_conn_get, _polyvaccine.ST_PolyEngine_conn_set)
    __swig_setmethods__["flowpool"] = _polyvaccine.ST_PolyEngine_flowpool_set
    __swig_getmethods__["flowpool"] = _polyvaccine.ST_PolyEngine_flowpool_get
    if _newclass:flowpool = _swig_property(_polyvaccine.ST_PolyEngine_flowpool_get, _polyvaccine.ST_PolyEngine_flowpool_set)
    __swig_setmethods__["memorypool"] = _polyvaccine.ST_PolyEngine_memorypool_set
    __swig_getmethods__["memorypool"] = _polyvaccine.ST_PolyEngine_memorypool_get
    if _newclass:memorypool = _swig_property(_polyvaccine.ST_PolyEngine_memorypool_get, _polyvaccine.ST_PolyEngine_memorypool_set)
    __swig_setmethods__["httpcache"] = _polyvaccine.ST_PolyEngine_httpcache_set
    __swig_getmethods__["httpcache"] = _polyvaccine.ST_PolyEngine_httpcache_get
    if _newclass:httpcache = _swig_property(_polyvaccine.ST_PolyEngine_httpcache_get, _polyvaccine.ST_PolyEngine_httpcache_set)
    __swig_setmethods__["hosts"] = _polyvaccine.ST_PolyEngine_hosts_set
    __swig_getmethods__["hosts"] = _polyvaccine.ST_PolyEngine_hosts_get
    if _newclass:hosts = _swig_property(_polyvaccine.ST_PolyEngine_hosts_get, _polyvaccine.ST_PolyEngine_hosts_set)
    __swig_setmethods__["source"] = _polyvaccine.ST_PolyEngine_source_set
    __swig_getmethods__["source"] = _polyvaccine.ST_PolyEngine_source_get
    if _newclass:source = _swig_property(_polyvaccine.ST_PolyEngine_source_get, _polyvaccine.ST_PolyEngine_source_set)
    __swig_setmethods__["pcap"] = _polyvaccine.ST_PolyEngine_pcap_set
    __swig_getmethods__["pcap"] = _polyvaccine.ST_PolyEngine_pcap_get
    if _newclass:pcap = _swig_property(_polyvaccine.ST_PolyEngine_pcap_get, _polyvaccine.ST_PolyEngine_pcap_set)
    def __init__(self): 
        this = _polyvaccine.new_ST_PolyEngine()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _polyvaccine.delete_ST_PolyEngine
    __del__ = lambda self : None;
ST_PolyEngine_swigregister = _polyvaccine.ST_PolyEngine_swigregister
ST_PolyEngine_swigregister(ST_PolyEngine)


def POEG_Init():
  return _polyvaccine.POEG_Init()
POEG_Init = _polyvaccine.POEG_Init

def POEG_Destroy():
  return _polyvaccine.POEG_Destroy()
POEG_Destroy = _polyvaccine.POEG_Destroy

def POEG_SetSource(*args):
  return _polyvaccine.POEG_SetSource(*args)
POEG_SetSource = _polyvaccine.POEG_SetSource

def POEG_SetSourcePort(*args):
  return _polyvaccine.POEG_SetSourcePort(*args)
POEG_SetSourcePort = _polyvaccine.POEG_SetSourcePort

def POEG_Stats():
  return _polyvaccine.POEG_Stats()
POEG_Stats = _polyvaccine.POEG_Stats

def POEG_Start():
  return _polyvaccine.POEG_Start()
POEG_Start = _polyvaccine.POEG_Start

def POEG_Stop():
  return _polyvaccine.POEG_Stop()
POEG_Stop = _polyvaccine.POEG_Stop

def POEG_StopAndExit():
  return _polyvaccine.POEG_StopAndExit()
POEG_StopAndExit = _polyvaccine.POEG_StopAndExit

def POEG_Run():
  return _polyvaccine.POEG_Run()
POEG_Run = _polyvaccine.POEG_Run

def POEG_SetLearningMode():
  return _polyvaccine.POEG_SetLearningMode()
POEG_SetLearningMode = _polyvaccine.POEG_SetLearningMode

def POEG_AddToHttpCache(*args):
  return _polyvaccine.POEG_AddToHttpCache(*args)
POEG_AddToHttpCache = _polyvaccine.POEG_AddToHttpCache

def POEG_GetHttpHeaderCacheHits():
  return _polyvaccine.POEG_GetHttpHeaderCacheHits()
POEG_GetHttpHeaderCacheHits = _polyvaccine.POEG_GetHttpHeaderCacheHits

def POEG_GetHttpHeaderCacheFails():
  return _polyvaccine.POEG_GetHttpHeaderCacheFails()
POEG_GetHttpHeaderCacheFails = _polyvaccine.POEG_GetHttpHeaderCacheFails

def POEG_GetHttpParameterCacheHits():
  return _polyvaccine.POEG_GetHttpParameterCacheHits()
POEG_GetHttpParameterCacheHits = _polyvaccine.POEG_GetHttpParameterCacheHits

def POEG_GetHttpParameterCacheFails():
  return _polyvaccine.POEG_GetHttpParameterCacheFails()
POEG_GetHttpParameterCacheFails = _polyvaccine.POEG_GetHttpParameterCacheFails


